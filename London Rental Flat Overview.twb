<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0605.1023                               -->
<workbook original-version='18.1' source-build='2021.2.0 (20212.21.0605.1023)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DashboardMttwImageObject />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='color' value='#333333' />
    </style-rule>
    <style-rule element='title'>
      <format attr='font-size' value='12' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <style-rule element='tooltip'>
      <format attr='color' value='#333333' />
    </style-rule>
    <style-rule element='all'>
      <format attr='font-family' value='calibri' />
      <format attr='color' value='#333333' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='By Borough' caption='Date Param' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rent By Scrape Date&quot;'>
        <calculation class='tableau' formula='&quot;Rent By Scrape Date&quot;' />
        <aliases>
          <alias key='&quot;Rent By Available Date&quot;' value='By Available Date' />
          <alias key='&quot;Rent By Scrape Date&quot;' value='By Borough' />
        </aliases>
        <members>
          <member alias='By Borough' value='&quot;Rent By Scrape Date&quot;' />
          <member alias='By Available Date' value='&quot;Rent By Available Date&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='all_rental_data' inline='true' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_rental_data' name='textscan.0iqqcd00uvkfdr13obhyg1v0kyv5'>
            <connection class='textscan' directory='/Users/eric/Desktop/PYTHON/Portfolio Projects/real estate' filename='all_rental_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0iqqcd00uvkfdr13obhyg1v0kyv5' name='all_rental_data.csv' table='[all_rental_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='property_id' ordinal='0' />
            <column datatype='string' name='property_link' ordinal='1' />
            <column datatype='string' name='listing_title' ordinal='2' />
            <column datatype='string' name='description' ordinal='3' />
            <column datatype='string' name='location' ordinal='4' />
            <column datatype='real' name='num_bedrooms' ordinal='5' />
            <column datatype='real' name='num_bathrooms' ordinal='6' />
            <column datatype='integer' name='max_tenants' ordinal='7' />
            <column datatype='string' name='deposit' ordinal='8' />
            <column datatype='real' name='rent_pcm' ordinal='9' />
            <column datatype='string' name='bills_included' ordinal='10' />
            <column datatype='string' name='student_friendly' ordinal='11' />
            <column datatype='string' name='family_friendly' ordinal='12' />
            <column datatype='string' name='pet_friendly' ordinal='13' />
            <column datatype='string' name='smoker_friendly' ordinal='14' />
            <column datatype='date' date-parse-format='dd-MMM-yy|#|#|dd MMMM, yyyy' name='available_from' ordinal='15' />
            <column datatype='string' name='min_tenancy_months' ordinal='16' />
            <column datatype='string' name='garden' ordinal='17' />
            <column datatype='string' name='parking' ordinal='18' />
            <column datatype='string' name='fireplace' ordinal='19' />
            <column datatype='string' name='furnishing' ordinal='20' />
            <column datatype='string' name='closest_station' ordinal='21' />
            <column datatype='string' name='closest_station_mins' ordinal='22' />
            <column datatype='string' name='postcode' ordinal='23' />
            <column datatype='date' date-parse-format='dd-MMM-yy|#|#|dd MMMM yyyy' name='scrape_date' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0iqqcd00uvkfdr13obhyg1v0kyv5' name='all_rental_data.csv' table='[all_rental_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='property_id' ordinal='0' />
            <column datatype='string' name='property_link' ordinal='1' />
            <column datatype='string' name='listing_title' ordinal='2' />
            <column datatype='string' name='description' ordinal='3' />
            <column datatype='string' name='location' ordinal='4' />
            <column datatype='real' name='num_bedrooms' ordinal='5' />
            <column datatype='real' name='num_bathrooms' ordinal='6' />
            <column datatype='integer' name='max_tenants' ordinal='7' />
            <column datatype='string' name='deposit' ordinal='8' />
            <column datatype='real' name='rent_pcm' ordinal='9' />
            <column datatype='string' name='bills_included' ordinal='10' />
            <column datatype='string' name='student_friendly' ordinal='11' />
            <column datatype='string' name='family_friendly' ordinal='12' />
            <column datatype='string' name='pet_friendly' ordinal='13' />
            <column datatype='string' name='smoker_friendly' ordinal='14' />
            <column datatype='date' date-parse-format='dd-MMM-yy|#|#|dd MMMM, yyyy' name='available_from' ordinal='15' />
            <column datatype='string' name='min_tenancy_months' ordinal='16' />
            <column datatype='string' name='garden' ordinal='17' />
            <column datatype='string' name='parking' ordinal='18' />
            <column datatype='string' name='fireplace' ordinal='19' />
            <column datatype='string' name='furnishing' ordinal='20' />
            <column datatype='string' name='closest_station' ordinal='21' />
            <column datatype='string' name='closest_station_mins' ordinal='22' />
            <column datatype='string' name='postcode' ordinal='23' />
            <column datatype='date' date-parse-format='dd-MMM-yy|#|#|dd MMMM yyyy' name='scrape_date' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[property_id]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>property_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[property_link]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>property_link</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listing_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[listing_title]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>listing_title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_bedrooms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[num_bedrooms]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>num_bedrooms</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_bathrooms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[num_bathrooms]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>num_bathrooms</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_tenants</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_tenants]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>max_tenants</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deposit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deposit]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>deposit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rent_pcm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rent_pcm]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>rent_pcm</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bills_included</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bills_included]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>bills_included</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>student_friendly</remote-name>
            <remote-type>129</remote-type>
            <local-name>[student_friendly]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>student_friendly</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>family_friendly</remote-name>
            <remote-type>129</remote-type>
            <local-name>[family_friendly]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>family_friendly</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pet_friendly</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pet_friendly]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>pet_friendly</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>smoker_friendly</remote-name>
            <remote-type>129</remote-type>
            <local-name>[smoker_friendly]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>smoker_friendly</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>available_from</remote-name>
            <remote-type>7</remote-type>
            <local-name>[available_from]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>available_from</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_tenancy_months</remote-name>
            <remote-type>129</remote-type>
            <local-name>[min_tenancy_months]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>min_tenancy_months</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>garden</remote-name>
            <remote-type>129</remote-type>
            <local-name>[garden]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>garden</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parking</remote-name>
            <remote-type>129</remote-type>
            <local-name>[parking]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>parking</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fireplace</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fireplace]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>fireplace</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>furnishing</remote-name>
            <remote-type>129</remote-type>
            <local-name>[furnishing]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>furnishing</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>closest_station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[closest_station]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>closest_station</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>closest_station_mins</remote-name>
            <remote-type>129</remote-type>
            <local-name>[closest_station_mins]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>closest_station_mins</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postcode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[postcode]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>postcode</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scrape_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[scrape_date]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>scrape_date</remote-alias>
            <ordinal>24</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
      </column>
      <column caption='# Properties' datatype='integer' name='[Calculation_719379691610189826]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([property_id])' />
      </column>
      <column caption='Days On Market' datatype='integer' name='[Calculation_768919287822987264]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [property_id]: COUNTD([scrape_date])}' />
      </column>
      <column aggregation='Sum' caption='Date Split Calc' datatype='integer' name='[Calculation_802133335129923585]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Rent By Scrape Date&apos; THEN 1 ELSE 0 END' />
      </column>
      <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
      </column>
      <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
      </column>
      <column caption='Days on Market' datatype='integer' name='[Calculation_888546153548345344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [property_id]: COUNTD([scrape_date])}' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='all_rental_data.csv' datatype='table' name='[__tableau_internal_object_id__].[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]' role='measure' type='quantitative' />
      <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
      <column caption='Bills Included' datatype='string' name='[bills_included]' role='dimension' type='nominal' />
      <column caption='Closest Station' datatype='string' name='[closest_station]' role='dimension' type='nominal' />
      <column caption='Closest Station Mins' datatype='string' default-role='measure' default-type='quantitative' name='[closest_station_mins]' role='dimension' type='nominal' />
      <column caption='Deposit' datatype='string' name='[deposit]' role='dimension' type='nominal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Family Friendly' datatype='string' name='[family_friendly]' role='dimension' type='nominal' />
      <column caption='Fireplace' datatype='string' name='[fireplace]' role='dimension' type='nominal' />
      <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
      <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
      <column caption='Listing Title' datatype='string' name='[listing_title]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Max Tenants' datatype='integer' name='[max_tenants]' role='measure' type='quantitative' />
      <column caption='Min Tenancy Months' datatype='string' name='[min_tenancy_months]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='# Baths' datatype='real' name='[num_bathrooms]' role='dimension' type='ordinal' />
      <column caption='# Beds' datatype='real' name='[num_bedrooms]' role='dimension' type='ordinal' />
      <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
      <column caption='Pet Friendly' datatype='string' name='[pet_friendly]' role='dimension' type='nominal' />
      <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
      <column caption='Property Link' datatype='string' name='[property_link]' role='dimension' type='nominal' />
      <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
      <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
      <column caption='Smoker Friendly' datatype='string' name='[smoker_friendly]' role='dimension' type='nominal' />
      <column caption='Student Friendly' datatype='string' name='[student_friendly]' role='dimension' type='nominal' />
      <column-instance column='[rent_pcm]' derivation='Avg' name='[avg:rent_pcm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rent_pcm]' derivation='Median' name='[med:rent_pcm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_719379691610189826]' derivation='User' name='[usr:Calculation_719379691610189826:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Postcode)' hidden='true' name='[Action (Postcode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[postcode]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Postcode)' hidden='true' name='[Tooltip (Postcode)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[postcode]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Still On Market,Postcode)' hidden='true' name='[Tooltip (Still On Market,Postcode)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_719379691605893121]' />
          <groupfilter function='level-members' level='[postcode]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_719379691605893121:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08d00uo1ue0adw1bnxbw40m8rntt].[med:rent_pcm:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-date-format>*dd-mmm-yy</default-date-format>
      <datasource-dependencies datasource='Parameters'>
        <column alias='By Borough' caption='Date Param' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rent By Scrape Date&quot;'>
          <calculation class='tableau' formula='&quot;Rent By Scrape Date&quot;' />
          <aliases>
            <alias key='&quot;Rent By Available Date&quot;' value='By Available Date' />
            <alias key='&quot;Rent By Scrape Date&quot;' value='By Borough' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all_rental_data.csv' id='all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B'>
            <properties context=''>
              <relation connection='textscan.0iqqcd00uvkfdr13obhyg1v0kyv5' name='all_rental_data.csv' table='[all_rental_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='property_id' ordinal='0' />
                  <column datatype='string' name='property_link' ordinal='1' />
                  <column datatype='string' name='listing_title' ordinal='2' />
                  <column datatype='string' name='description' ordinal='3' />
                  <column datatype='string' name='location' ordinal='4' />
                  <column datatype='real' name='num_bedrooms' ordinal='5' />
                  <column datatype='real' name='num_bathrooms' ordinal='6' />
                  <column datatype='integer' name='max_tenants' ordinal='7' />
                  <column datatype='string' name='deposit' ordinal='8' />
                  <column datatype='real' name='rent_pcm' ordinal='9' />
                  <column datatype='string' name='bills_included' ordinal='10' />
                  <column datatype='string' name='student_friendly' ordinal='11' />
                  <column datatype='string' name='family_friendly' ordinal='12' />
                  <column datatype='string' name='pet_friendly' ordinal='13' />
                  <column datatype='string' name='smoker_friendly' ordinal='14' />
                  <column datatype='date' date-parse-format='dd-MMM-yy|#|#|dd MMMM, yyyy' name='available_from' ordinal='15' />
                  <column datatype='string' name='min_tenancy_months' ordinal='16' />
                  <column datatype='string' name='garden' ordinal='17' />
                  <column datatype='string' name='parking' ordinal='18' />
                  <column datatype='string' name='fireplace' ordinal='19' />
                  <column datatype='string' name='furnishing' ordinal='20' />
                  <column datatype='string' name='closest_station' ordinal='21' />
                  <column datatype='string' name='closest_station_mins' ordinal='22' />
                  <column datatype='string' name='postcode' ordinal='23' />
                  <column datatype='date' date-parse-format='dd-MMM-yy|#|#|dd MMMM yyyy' name='scrape_date' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
      <datasources>
        <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
      </datasources>
      <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
        <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
        </column>
        <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
        </column>
        <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
        <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
        <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
        <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
        <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
        <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
        <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
        <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
        <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
        <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
        <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
        <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_719379691605893121:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_816770033929490432:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]' included-values='all' />
      <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]'>
        <groupfilter function='level-members' level='[none:furnishing:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]'>
        <groupfilter function='level-members' level='[none:garden:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]'>
        <groupfilter function='level-members' level='[none:parking:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]'>
        <groupfilter function='level-members' level='[none:postcode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]' included-values='all' />
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Visit Listing' name='[Action1_51F15CEFC7C34818B17E56C731E378F1]'>
      <source dashboard='London Rental Flat Overview' type='sheet' worksheet='Data Detail' />
      <link caption='' expression='https://www.openrent.co.uk//&lt;[property_id]&gt;' />
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_362B439DEC2140838165D7179AA66AF6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='London Rental Flat Overview' type='sheet' worksheet='Flat Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='London Rental Flat Overview' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_79184BA9BC234F8586E6F2A258202FBE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='London Rental Flat Overview' type='sheet' worksheet='Rent By Borough' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='London Rental Flat Overview' />
      </command>
    </action>
    <datasources>
      <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
    </datasources>
    <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
      <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='# Properties'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column-instance column='[property_id]' derivation='CountD' name='[ctd:property_id:qk]' pivot='key' type='quantitative' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action2_362B439DEC2140838165D7179AA66AF6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='16' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='normal' />
            <format attr='color' value='#666666' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='9' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Properties still on the market.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B98E830A-BC1B-4C42-A222-0CAFCBB8EB39}' />
    </worksheet>
    <worksheet name='Average Baths'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column-instance column='[num_bathrooms]' derivation='Avg' name='[avg:num_bathrooms:qk]' pivot='key' type='quantitative' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='# Baths' datatype='real' name='[num_bathrooms]' role='dimension' type='ordinal' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action2_362B439DEC2140838165D7179AA66AF6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='70' />
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:num_bathrooms:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='16' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:num_bathrooms:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Average number of Bathrooms.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{50A44A0D-34AF-4025-B4E9-5B6230C59DB3}' />
    </worksheet>
    <worksheet name='Average Beds'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column-instance column='[num_bedrooms]' derivation='Avg' name='[avg:num_bedrooms:qk]' pivot='key' type='quantitative' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='# Beds' datatype='real' name='[num_bedrooms]' role='dimension' type='ordinal' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action2_362B439DEC2140838165D7179AA66AF6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='89' />
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:num_bedrooms:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='16' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:num_bedrooms:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Average number of Bedrooms.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4C346898-3402-44AA-A95E-7629B8DC0DBF}' />
    </worksheet>
    <worksheet name='Average Rent'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column-instance column='[rent_pcm]' derivation='Avg' name='[avg:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column caption='Min Tenancy Months' datatype='string' name='[min_tenancy_months]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_tenancy_months]' derivation='None' name='[none:min_tenancy_months:ok]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action2_362B439DEC2140838165D7179AA66AF6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:ok]'>
            <groupfilter function='level-members' level='[none:min_tenancy_months:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:ok]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' value='c&quot;Â£&quot;#,##0.00;-&quot;Â£&quot;#,##0.00' />
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='16' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='9' />
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Average rent PCM (Â£).</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{935787A2-80F5-44C0-9D19-15ED33B5ADCE}' />
    </worksheet>
    <worksheet name='Data Detail'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Days on Market' datatype='integer' name='[Calculation_888546153548345344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [property_id]: COUNTD([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column caption='Bills Included' datatype='string' name='[bills_included]' role='dimension' type='nominal' />
            <column caption='Closest Station Mins' datatype='string' default-role='measure' default-type='quantitative' name='[closest_station_mins]' role='dimension' type='nominal' />
            <column caption='Deposit' datatype='string' name='[deposit]' role='dimension' type='nominal' />
            <column caption='Family Friendly' datatype='string' name='[family_friendly]' role='dimension' type='nominal' />
            <column caption='Fireplace' datatype='string' name='[fireplace]' role='dimension' type='nominal' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column caption='Min Tenancy Months' datatype='string' name='[min_tenancy_months]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:ok]' pivot='key' type='ordinal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bills_included]' derivation='None' name='[none:bills_included:nk]' pivot='key' type='nominal' />
            <column-instance column='[closest_station_mins]' derivation='None' name='[none:closest_station_mins:ok]' pivot='key' type='nominal' />
            <column-instance column='[deposit]' derivation='None' name='[none:deposit:ok]' pivot='key' type='nominal' />
            <column-instance column='[family_friendly]' derivation='None' name='[none:family_friendly:nk]' pivot='key' type='nominal' />
            <column-instance column='[fireplace]' derivation='None' name='[none:fireplace:nk]' pivot='key' type='nominal' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_tenancy_months]' derivation='None' name='[none:min_tenancy_months:ok]' pivot='key' type='nominal' />
            <column-instance column='[num_bathrooms]' derivation='None' name='[none:num_bathrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[num_bedrooms]' derivation='None' name='[none:num_bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[pet_friendly]' derivation='None' name='[none:pet_friendly:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[property_id]' derivation='None' name='[none:property_id:ok]' pivot='key' type='nominal' />
            <column-instance column='[property_link]' derivation='None' name='[none:property_link:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='# Baths' datatype='real' name='[num_bathrooms]' role='dimension' type='ordinal' />
            <column caption='# Beds' datatype='real' name='[num_bedrooms]' role='dimension' type='ordinal' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Pet Friendly' datatype='string' name='[pet_friendly]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Property Link' datatype='string' name='[property_link]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_888546153548345344]' derivation='Sum' name='[sum:Calculation_888546153548345344:ok]' pivot='key' type='ordinal' />
            <column-instance column='[rent_pcm]' derivation='Sum' name='[sum:rent_pcm:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action2_362B439DEC2140838165D7179AA66AF6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='31' />
            <format attr='height' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_link:nk]' value='36' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='48' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_link:nk]' value='244' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:ok]' value='88' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]' value='180' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[sum:Calculation_888546153548345344:ok]' value='64' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok]' value='52' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok]' value='68' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:closest_station_mins:ok]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_id:ok]' value='false' />
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[sum:rent_pcm:ok]' value='c&quot;Â£&quot;#,##0.00;-&quot;Â£&quot;#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:bills_included:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:family_friendly:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:fireplace:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:pet_friendly:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:deposit:ok]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run italic='true' underline='true'>Tenancy Information:</run>
                <run>Ã&#10;</run>
                <run bold='true'>Deposit (Â£):&#9;</run>
                <run><![CDATA[Â£<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:deposit:ok]>
]]></run>
                <run bold='true'>Minimum Tenancy (Months):&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:ok]>

]]></run>
                <run italic='true' underline='true'>Misc Information:</run>
                <run>Ã&#10;</run>
                <run bold='true'>Postcode:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]>
]]></run>
                <run bold='true'>Pet Friendly:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:pet_friendly:nk]>
]]></run>
                <run bold='true'>Bills Included:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:bills_included:nk]>
]]></run>
                <run bold='true'>Family Friendly:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:family_friendly:nk]>
]]></run>
                <run bold='true'>Fireplace:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:fireplace:nk]>
]]></run>
                <run bold='true'>Garden:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]>
]]></run>
                <run bold='true'>Parking:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]>
]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_id:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[sum:Calculation_888546153548345344:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[sum:rent_pcm:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:closest_station_mins:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk] / [federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_link:nk])))))))))</rows>
        <cols />
      </table>
      <simple-id uuid='{E82E9F1A-0918-4BB4-A8CB-804A5C293DC7}' />
    </worksheet>
    <worksheet name='Flat Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Rent &amp; # Of Properties</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column-instance column='[rent_pcm]' derivation='Avg' name='[avg:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_id]' derivation='CountD' name='[ctd:property_id:qk]' pivot='key' type='quantitative' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Longitude (generated)]' field-type='quantitative' max='-6764.1158364623916' min='-23054.187346176957' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Latitude (generated)]' field-type='quantitative' max='6717241.708166766' min='6708825.5637484295' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]' num-steps='6' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#00ffb7</color>
                <color>#76ecca</color>
                <color>#d9d9d9</color>
                <color>#ec907c</color>
                <color>#ff3a0e</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='hillshade_highlight_bright' value='false' />
            <format attr='enabled' id='hillshade_highlight_med' value='false' />
            <format attr='enabled' id='hillshade_shadow_faint' value='false' />
            <format attr='enabled' id='hillshade_shadow_med' value='false' />
            <format attr='enabled' id='hillshade_shadow_dark' value='false' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='false' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-2-boundaries' value='false' />
            <format attr='enabled' id='admin-2-boundaries-dispute' value='false' />
            <format attr='enabled' id='country-label-sm' value='false' />
            <format attr='enabled' id='country-label-md' value='false' />
            <format attr='enabled' id='country-label-lg' value='false' />
            <format attr='enabled' id='admin-3-4-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-3-4-boundaries' value='false' />
            <format attr='enabled' id='state-label-sm' value='false' />
            <format attr='enabled' id='state-label-md' value='false' />
            <format attr='enabled' id='state-label-lg' value='false' />
            <format attr='enabled' id='marine-label-sm-ln' value='false' />
            <format attr='enabled' id='marine-label-sm-pt' value='false' />
            <format attr='enabled' id='marine-label-md-ln' value='false' />
            <format attr='enabled' id='marine-label-md-pt' value='false' />
            <format attr='enabled' id='marine-label-lg-ln' value='false' />
            <format attr='enabled' id='marine-label-lg-pt' value='false' />
            <format attr='enabled' id='waterway-label' value='false' />
            <format attr='enabled' id='water-label-sm' value='false' />
            <format attr='enabled' id='water-label' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.25' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]' />
              <size column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Postcode:&#9;</run>
                <run bold='true'><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]>]]></run>
                <run>&#10;Average Rent PCM:&#9;</run>
                <run bold='true'><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]>]]></run>
                <run>&#10;# of Properties:&#9;</run>
                <run bold='true'><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]>]]></run>
                <run>Ã&#10;&#10;</run>
                <run bold='true' italic='true' underline='true'>Flat Detail:</run>
                <run>Ã&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Map Tooltip" maxwidth="600" maxheight="600" filter="<All Fields>">]]></run>
                <run>Ã&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Latitude (generated)]</rows>
        <cols>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3E9F7505-5E69-4E78-B5E0-76A5372B7081}' />
    </worksheet>
    <worksheet name='Map Tooltip'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='# Properties' datatype='integer' name='[Calculation_719379691610189826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([property_id])' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column caption='Deposit' datatype='string' name='[deposit]' role='dimension' type='nominal' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='Median' name='[med:rent_pcm:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deposit]' derivation='None' name='[none:deposit:ok]' pivot='key' type='nominal' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[num_bathrooms]' derivation='None' name='[none:num_bathrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[num_bedrooms]' derivation='None' name='[none:num_bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='# Baths' datatype='real' name='[num_bathrooms]' role='dimension' type='ordinal' />
            <column caption='# Beds' datatype='real' name='[num_bedrooms]' role='dimension' type='ordinal' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_719379691610189826]' derivation='User' name='[usr:Calculation_719379691610189826:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Tooltip (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action - Sheet 10]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Tooltip (Still On Market,Postcode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Map Tooltip]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_719379691605893121]' />
              <groupfilter function='level-members' level='[postcode]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Tooltip (Postcode)]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Tooltip (Still On Market,Postcode)]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='5' />
            <format attr='height' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:ok]' value='28' />
            <format attr='height' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:deposit:ok]' value='40' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='36' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[med:rent_pcm:ok]' value='68' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]' value='92' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok]' value='52' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok]' value='56' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:ok]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[med:rent_pcm:ok]' value='c&quot;Â£&quot;#,##0;-&quot;Â£&quot;#,##0' />
            <format attr='wrap' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]' value='on' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-transparency' value='0' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[med:rent_pcm:ok] / [federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:deposit:ok])))))</rows>
        <cols />
      </table>
      <simple-id uuid='{62A2A8CD-E9EB-41F8-ADE6-E6787A5F305A}' />
    </worksheet>
    <worksheet name='Rent By Available Date'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='By Borough' caption='Date Param' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rent By Scrape Date&quot;'>
              <calculation class='tableau' formula='&quot;Rent By Scrape Date&quot;' />
              <aliases>
                <alias key='&quot;Rent By Available Date&quot;' value='By Available Date' />
                <alias key='&quot;Rent By Scrape Date&quot;' value='By Borough' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='# Properties' datatype='integer' name='[Calculation_719379691610189826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([property_id])' />
            </column>
            <column aggregation='Sum' caption='Date Split Calc' datatype='integer' name='[Calculation_802133335129923585]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Rent By Scrape Date&apos; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column-instance column='[rent_pcm]' derivation='Avg' name='[avg:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_802133335129923585]' derivation='None' name='[none:Calculation_802133335129923585:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
            <column-instance column='[available_from]' derivation='Week-Trunc' name='[twk:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_719379691610189826]' derivation='User' name='[usr:Calculation_719379691610189826:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action2_362B439DEC2140838165D7179AA66AF6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_802133335129923585:ok]'>
            <groupfilter function='member' level='[none:Calculation_802133335129923585:ok]' member='0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_802133335129923585:ok]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' scope='rows' value='Avg Rent PCM (Â£)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' value='c#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Available From Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[twk:available_from:qk]>]]></run>
                <run>Ã&#10;</run>
                <run fontcolor='#787878'>Average Rent PCM:&#9;</run>
                <run bold='true'><![CDATA[Â£<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]>]]></run>
                <run>Ã&#10;</run>
                <run fontcolor='#898989'>Properties Available:</run>
                <run>Ã&#9;</run>
                <run bold='true'><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]</rows>
        <cols>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[twk:available_from:qk]</cols>
      </table>
      <simple-id uuid='{7172DDF7-E204-4F14-A511-AB521FD6B15C}' />
    </worksheet>
    <worksheet name='Rent By Borough'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Rent By Borough</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='By Borough' caption='Date Param' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rent By Scrape Date&quot;'>
              <calculation class='tableau' formula='&quot;Rent By Scrape Date&quot;' />
              <aliases>
                <alias key='&quot;Rent By Available Date&quot;' value='By Available Date' />
                <alias key='&quot;Rent By Scrape Date&quot;' value='By Borough' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='# Properties' datatype='integer' name='[Calculation_719379691610189826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([property_id])' />
            </column>
            <column aggregation='Sum' caption='Date Split Calc' datatype='integer' name='[Calculation_802133335129923585]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Rent By Scrape Date&apos; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column-instance column='[rent_pcm]' derivation='Avg' name='[avg:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_802133335129923585]' derivation='None' name='[none:Calculation_802133335129923585:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_719379691610189826]' derivation='User' name='[usr:Calculation_719379691610189826:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action2_362B439DEC2140838165D7179AA66AF6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_802133335129923585:ok]'>
            <groupfilter function='member' level='[none:Calculation_802133335129923585:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_802133335129923585:ok]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' value='c&quot;Â£&quot;#,##0.00;-&quot;Â£&quot;#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' value='c#,##0;-#,##0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#f28e2b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' />
              <color column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:qk]' />
              <text column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]' />
              <text column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0E970F95-65AC-438A-B0F3-E577B3E314AC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='London Rental Flat Overview'>
      <style />
      <size maxheight='1500' maxwidth='1000' minheight='1500' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='By Borough' caption='Date Param' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rent By Scrape Date&quot;'>
          <calculation class='tableau' formula='&quot;Rent By Scrape Date&quot;' />
          <aliases>
            <alias key='&quot;Rent By Available Date&quot;' value='By Available Date' />
            <alias key='&quot;Rent By Scrape Date&quot;' value='By Borough' />
          </aliases>
          <members>
            <member alias='By Borough' value='&quot;Rent By Scrape Date&quot;' />
            <member alias='By Available Date' value='&quot;Rent By Available Date&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
        <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
        </column>
        <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
        </column>
        <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
        <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
        <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
        <column caption='Min Tenancy Months' datatype='string' name='[min_tenancy_months]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
        <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
        <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
        <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
        <column-instance column='[min_tenancy_months]' derivation='None' name='[none:min_tenancy_months:ok]' pivot='key' type='nominal' />
        <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
        <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
        <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
        <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
        <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
        <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98934' id='26' param='horz' type-v2='layout-flow' w='98400' x='800' y='533'>
            <zone h='98934' id='5' param='vert' type-v2='layout-flow' w='98400' x='800' y='533'>
              <zone fixed-size='50' h='3333' id='29' is-fixed='true' param='horz' type-v2='layout-flow' w='98400' x='800' y='533'>
                <zone fixed-size='317' forceUpdate='true' h='3333' id='30' is-fixed='true' type-v2='text' w='32500' x='800' y='533'>
                  <formatted-text>
                    <run bold='true' fontsize='16'>London Rental Flat Overview</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='3333' id='59' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='65900' x='33300' y='533'>
                  <zone alt-text='Image of Apartment Building' h='3334' id='61' is-scaled='1' param='/Users/eric/Desktop/PYTHON/Portfolio Projects/real estate/images/apartment.png' type-v2='bitmap' w='16500' x='33300' y='533'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3334' id='27' mode='checkdropdown' name='# Properties' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]' show-apply='true' type-v2='filter' values='relevant' w='16500' x='49800' y='533'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3334' id='51' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]' show-null-ctrls='false' show-reldate-picker='false' show-slider='false' type-v2='filter' values='relevant' w='16500' x='66300' y='533'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3334' id='28' name='# Properties' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]' type-v2='filter' values='relevant' w='16400' x='82800' y='533'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='3333' id='58' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='98400' x='800' y='3866'>
                <zone h='3333' id='52' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='800' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='3333' id='57' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='17200' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='3333' id='53' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='33600' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='3333' id='54' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='50000' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='3333' id='56' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='66400' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='3333' id='55' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:ok]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='82800' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='2' h='666' id='24' is-fixed='true' type-v2='empty' w='98400' x='800' y='7199'>
                <zone-style>
                  <format attr='border-color' value='#666666' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='2' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='12' h='1333' id='23' is-fixed='true' type-v2='empty' w='98400' x='800' y='7865'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='90269' id='6' type-v2='layout-basic' w='98400' x='800' y='9198'>
                <zone h='90269' id='8' param='vert' type-v2='layout-flow' w='98400' x='800' y='9198'>
                  <zone fixed-size='400' h='26667' id='49' is-fixed='true' param='horz' type-v2='layout-flow' w='98400' x='800' y='9198'>
                    <zone fixed-size='692' h='26667' id='36' is-fixed='true' name='Flat Map' w='70000' x='800' y='9198'>
                      <layout-cache minheight='235' minwidth='202' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone fixed-size='12' h='26667' id='50' is-fixed='true' type-v2='empty' w='2000' x='70800' y='9198'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone fixed-size='250' h='26667' id='48' is-fixed='true' param='vert' type-v2='layout-flow' w='25000' x='72800' y='9198'>
                      <zone h='4000' id='13' param='vert' type-v2='layout-flow' w='25000' x='72800' y='9198'>
                        <zone forceUpdate='true' h='1800' id='14' type-v2='text' w='25000' x='72800' y='9198'>
                          <formatted-text>
                            <run bold='true' fontsize='12'>Average Rent:</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='2200' id='15' name='Average Rent' show-title='false' w='25000' x='72800' y='10998'>
                          <layout-cache fixed-size-h='25' fixed-size-w='120' type-h='fixed' type-w='fixed' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                      <zone h='4000' id='12' param='vert' type-v2='layout-flow' w='25000' x='72800' y='13198'>
                        <zone h='1800' id='11' type-v2='text' w='25000' x='72800' y='13198'>
                          <formatted-text>
                            <run bold='true' fontsize='12'># Properties:</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='2200' id='10' name='# Properties' show-title='false' w='25000' x='72800' y='14998'>
                          <layout-cache fixed-size-h='25' fixed-size-w='80' type-h='fixed' type-w='fixed' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                      <zone h='4000' id='16' param='vert' type-v2='layout-flow' w='25000' x='72800' y='17198'>
                        <zone forceUpdate='true' h='1800' id='17' type-v2='text' w='25000' x='72800' y='17198'>
                          <formatted-text>
                            <run bold='true' fontsize='12'>Average # Beds:</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='2200' id='18' name='Average Beds' show-title='false' w='25000' x='72800' y='18998'>
                          <layout-cache fixed-size-h='25' fixed-size-w='89' type-h='fixed' type-w='fixed' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                      <zone h='4000' id='19' param='vert' type-v2='layout-flow' w='25000' x='72800' y='21198'>
                        <zone forceUpdate='true' h='1800' id='20' type-v2='text' w='25000' x='72800' y='21198'>
                          <formatted-text>
                            <run bold='true' fontsize='12'>Average # Baths:</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='2200' id='21' name='Average Baths' show-title='false' w='25000' x='72800' y='22998'>
                          <layout-cache fixed-size-h='25' fixed-size-w='70' type-h='fixed' type-w='fixed' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                  <zone fixed-size='12' h='1333' id='31' is-fixed='true' type-v2='empty' w='98400' x='800' y='35865'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='450' h='30000' id='35' is-fixed='true' param='horz' type-v2='layout-flow' w='98400' x='800' y='37198'>
                    <zone fixed-size='550' h='30000' id='32' is-fixed='true' param='vert' type-v2='layout-flow' w='98400' x='800' y='37198'>
                      <zone forceUpdate='true' h='1800' id='37' type-v2='text' w='98400' x='800' y='37198'>
                        <formatted-text>
                          <run bold='true' fontsize='12'>Average Rent (Â£) PCM &lt;</run>
                          <run bold='true' fontsize='12'>[Parameters].[Parameter 1]</run>
                          <run bold='true' fontsize='12'>&gt;</run>
                        </formatted-text>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='3333' id='38' mode='list' param='[Parameters].[Parameter 1]' show-title='false' type-v2='paramctrl' w='98400' x='800' y='38998'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone fixed-size='2' h='666' id='39' is-fixed='true' type-v2='empty' w='98400' x='800' y='42331'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='24134' id='33' name='Rent By Borough' show-title='false' w='98400' x='800' y='42997'>
                        <layout-cache cell-count-h='1' type-h='cell' type-w='cell' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='67' id='34' name='Rent By Available Date' show-title='false' w='98400' x='800' y='67131'>
                        <layout-cache has-max-size-h='true' maxheight='1' minheight='1' minwidth='170' type-h='scalable' type-w='scalable' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone fixed-size='12' h='1333' id='47' is-fixed='true' type-v2='empty' w='98400' x='800' y='67198'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='12' h='1333' id='41' is-fixed='true' type-v2='empty' w='98400' x='800' y='68531'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='29603' id='42' name='Data Detail' w='98400' x='800' y='69864'>
                    <layout-cache fixed-size-h='57215' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2400' minheight='2400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='79' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98934' id='78' param='vert' type-v2='layout-flow' w='98400' x='800' y='533'>
                <zone fixed-size='317' forceUpdate='true' h='3333' id='30' type-v2='text' w='32500' x='800' y='533'>
                  <formatted-text>
                    <run bold='true' fontsize='16'>London Rental Flat Overview</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone alt-text='Image of Apartment Building' fixed-size='42' h='3334' id='61' is-fixed='true' is-scaled='1' param='/Users/eric/Desktop/PYTHON/Portfolio Projects/real estate/images/apartment.png' type-v2='bitmap' w='16500' x='33300' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='26667' id='36' is-fixed='true' name='Flat Map' w='70000' x='800' y='9198'>
                  <layout-cache minheight='235' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='1800' id='14' type-v2='text' w='25000' x='72800' y='9198'>
                  <formatted-text>
                    <run bold='true' fontsize='12'>Average Rent:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3334' id='51' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]' show-null-ctrls='false' show-reldate-picker='false' show-slider='false' type-v2='filter' values='relevant' w='16500' x='66300' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3333' id='52' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='800' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3333' id='57' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='17200' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3333' id='53' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='33600' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3333' id='54' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='50000' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3333' id='56' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='66400' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3333' id='55' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:ok]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='82800' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='25' h='2200' id='15' is-fixed='true' name='Average Rent' show-title='false' w='25000' x='72800' y='10998'>
                  <layout-cache fixed-size-h='25' fixed-size-w='120' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='1800' id='11' type-v2='text' w='25000' x='72800' y='13198'>
                  <formatted-text>
                    <run bold='true' fontsize='12'># Properties:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3334' id='27' mode='checkdropdown' name='# Properties' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]' show-apply='true' type-v2='filter' values='relevant' w='16500' x='49800' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3334' id='28' name='# Properties' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]' type-v2='filter' values='relevant' w='16400' x='82800' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='25' h='2200' id='10' is-fixed='true' name='# Properties' show-title='false' w='25000' x='72800' y='14998'>
                  <layout-cache fixed-size-h='25' fixed-size-w='80' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='1800' id='17' type-v2='text' w='25000' x='72800' y='17198'>
                  <formatted-text>
                    <run bold='true' fontsize='12'>Average # Beds:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='25' h='2200' id='18' is-fixed='true' name='Average Beds' show-title='false' w='25000' x='72800' y='18998'>
                  <layout-cache fixed-size-h='25' fixed-size-w='89' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='1800' id='20' type-v2='text' w='25000' x='72800' y='21198'>
                  <formatted-text>
                    <run bold='true' fontsize='12'>Average # Baths:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='25' h='2200' id='21' is-fixed='true' name='Average Baths' show-title='false' w='25000' x='72800' y='22998'>
                  <layout-cache fixed-size-h='25' fixed-size-w='70' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='1800' id='37' type-v2='text' w='98400' x='800' y='37198'>
                  <formatted-text>
                    <run bold='true' fontsize='12'>Average Rent (Â£) PCM &lt;</run>
                    <run bold='true' fontsize='12'>[Parameters].[Parameter 1]</run>
                    <run bold='true' fontsize='12'>&gt;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3333' id='38' mode='list' param='[Parameters].[Parameter 1]' show-title='false' type-v2='paramctrl' w='98400' x='800' y='38998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24134' id='33' is-fixed='true' name='Rent By Borough' show-title='false' w='98400' x='800' y='42997'>
                  <layout-cache cell-count-h='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='67' id='34' is-fixed='true' name='Rent By Available Date' show-title='false' w='98400' x='800' y='67131'>
                  <layout-cache has-max-size-h='true' maxheight='1' minheight='1' minwidth='170' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29603' id='42' is-fixed='true' name='Data Detail' w='98400' x='800' y='69864'>
                  <layout-cache fixed-size-h='57215' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B9D33C1C-25C4-4B1A-97F4-F7207E5F080A}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='London Rental Flat Overview'>
      <viewpoints>
        <viewpoint name='# Properties' />
        <viewpoint name='Average Baths' />
        <viewpoint name='Average Beds' />
        <viewpoint name='Average Rent' />
        <viewpoint name='Data Detail' />
        <viewpoint name='Flat Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Rent By Available Date'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Rent By Borough'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7A761B9E-5006-4E78-A9D4-F1FDA3324CBA}' />
    </window>
    <window class='worksheet' hidden='true' name='# Properties' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCE1320E-D9F5-4029-AFEA-7435A9875862}' />
    </window>
    <window class='worksheet' hidden='true' name='Average Baths' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{647E7764-7A08-47D4-9784-B801E4DA5298}' />
    </window>
    <window class='worksheet' hidden='true' name='Average Beds' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D6A4D944-709A-4EE0-8AF3-CD9366A41873}' />
    </window>
    <window class='worksheet' hidden='true' name='Average Rent' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDC41464-F2D0-4616-8812-9B3E00A8CDFA}' />
    </window>
    <window class='worksheet' hidden='true' name='Data Detail' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:bills_included:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:closest_station:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:closest_station_mins:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:deposit:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:family_friendly:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:fireplace:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:pet_friendly:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_id:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_link:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[sum:Calculation_888546153548345344:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[sum:rent_pcm:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[yr:available_from:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{73A3DC87-29BA-438F-8277-8EFFF35EC597}' />
    </window>
    <window class='worksheet' hidden='true' name='Flat Map' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[med:num_bedrooms:qk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[tmn:available_from:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E264242F-CCE5-4901-8540-A5282A277032}' />
    </window>
    <window class='worksheet' hidden='true' name='Map Tooltip' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:deposit:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_id:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_link:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[sum:num_bedrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53F89F4B-F901-46F0-B663-D461457A8994}' />
    </window>
    <window class='worksheet' hidden='true' name='Rent By Available Date' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_802133335129923585:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[yr:available_from:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[yr:scrape_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37947904-12FE-4351-8DCE-D1DF70ADA9FC}' />
    </window>
    <window class='worksheet' hidden='true' name='Rent By Borough' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_802133335129923585:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[yr:scrape_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B714B8D-1279-44D1-8D22-7E415911D9B3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='London Rental Flat Overview' width='384'>
      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
      y1dWANOnT2fOnDkUFxezdetWiouLeeSRR6irq2PKlCl07tyZzz77DNM0KSoq4uWXXyYajXLZ
      ZZcl3brdu3cnyysrK+Paa69FkiR8Ph9VVVXcfffdjBgxgueff5558+bRtWtXysrKsG2be+65
      h9GjR7dZP13XEULgdrtJSUkB4O6772bBggV069aNbdu2MX36dE499VT++Mc/Eo/HiUajNDU1
      oWkar732Gp988gn79u3Dtm0efPBBnnnmGe69917Ky8txuVyUlpbym9/8hssvv/yrijHJZ599
      xuTJk+nduzdbt25FlmVef/11Fi1KrEQpLS3lhRde4J577mmVr+X81KlTUdXE5bzmmmt45ZVX
      WLx4MWPGjGHKlCmce+653HXXXZimydSpU7nxxhuJRqNce+21pKWlUVdXR1FREU8++SRr167l
      tttuo0OHDuzevZspU6bw+OOPH7EM0zS57bbbePjhhxk6dOgRZexyubj22muT8p4yZQput5tF
      ixaxdOlS5syZw0svvfS1ZXi8MYTKpmARHjlKkbeSGiPApmARXbx7WimAqqDGjlo3xXKYNI/F
      9gNuIqZCfnsZVbaA75di27hxI2lpabRv355FixYxdOhQNm3a9IVersPhrF69muzsbLp06cKz
      zz7Lz372M9asWcN5553XZh4hBM899xxXXnnlt1jTI/OVAs+ffvopc+bM4bzzzuPZZ59l2rRp
      fPDBByxevDiZRgjBggULGD16NDt37iQUCrFkyRIqKiq44YYbmDNnDiNHjkymf/zxx6mrq+Pp
      p59m9uzZpKSkMH369Fa/O378eF5++WUgYWW2xbx58zjvvPP45JNP+MMf/oDP52Pbtm3885//
      ZNKkScycOZOcnBxeffXVZJ7Gxkb+9re/ceuttxKPx9m2bRujR4+mS5cu5OXlMXv2bDweD7fe
      eiuzZs1ixowZtGvXjnXr1h2z3H71q18xfvx47rrrrsPO5efns2jRIh5++GF+/etfJ63wa6+9
      FoCzzjrrsMEfYP/+/UiSRMeOHZPHPB4P2dnZVFVV0aFDBwYOHMiKFStoamrinXfewTAMzjjj
      DJ544gni8TgvvPACN9xwAx999BFbtmxJltOnTx+WLVvGpZde2mYZh9KWjPv164fH42H16tWs
      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
      2Lx5M0VFRXTr1u1L5XU8AAcHB4cfKNu2bcM0TXr37s28efMAmD59OrfffjsAq1at4m9/+xtl
      ZWVceumljBs3jqeeegqAO++884sVwNtvv80HH3zwzbXgGInH48yfP5/58+ezdOlS6uvrj1vZ
      b7/9Nk899RSffvppm2nee+89otEopaWlh52rq6vjpZde4sknn2TlypXYtg3AZ599xtVXX83l
      l19OVVVVMv1//vMf5s+fz6JFi9i5c+dxa8cXsW3bNh555JFv7fccHBy+WebOncu4ceMYN24c
      //rXv4jFYgwdOpRFixZRU1PD66+/zrBhw3jkkUdo374906ZN4+mnnyYajVJXV3d0BVBfX8/N
      N9/M73//e0zT/LbadEQikQh33HEHH3/8MX//+9+57rrrvlT+V155hTlz5hx2fPv27Vx//fXY
      ts1NN910xLxCCGbNmkVpaSkbNmxoda6uro5f/vKXrF27Fq/Xyz333MP06dMBmDdvHpIk8dRT
      T5GRkZHM89hjj7Fo0SIWLVrExRdfzP79+79UW74My5cv57HHHgNA13XS0tK+sd9ycHD49ojF
      YixZsoTnn3+eZ555hqamJt566y2GDBlCZmYmM2fOpLy8nJKSEg4cOEBFRQVr1xW7pF0AACAA
      SURBVK5l/PjxxONx4AvmABYtWsTZZ5/NsmXLWLVqFWeccQZXXnkl5513HhdccAEzZsygR48e
      AMyYMQPLsrj55pvp27cvEydOpHv37sRiMX72s58xc+ZMamtr+eUvf8mkSZNYtGgRDz30EEVF
      RVRWVnLHHXfg9/u57bbbaGpq4mc/+xlXX331YXW69NJLKSgo4OWXXwbgww8/5C9/+QuxWIxJ
      kyYxbtw4JkyYQNeuXVmzZg3Dhg1j2rRpPProo8iyjCRJXHTRRcnyMjMzkWWZDz74gEGDBh32
      e6WlpTz33HPs2LGDv/71r6SkpDBs2DCKiooAeOmll1AUhfvvvx9VVWnfvj233HILo0aNYu7c
      uZimyX333cdtt93Wqtxhw4YxbNgwfvGLX1BTU8Odd96Jpml89NFHLFy4kNtvv52tW7fi9Xr5
      7//+bzp16sTEiRPp0aMH77//PqNHj+aPf/wjL730EnPmzEGWZf7nf/4HTdOYNm0a3bp1IyMj
      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
      0UdMnsPZISK+j1gkbEQHkOgKLfdYDGY5qT0Gg8NWi0soACwW520g4nqLw6NQ7OcoxlnGrmS9
      s4FzcGr7dYbyAlQWIGUZsT1bZ7vYw1w2EUpABAqLlgXGRUu9RC++QqIyxmUP6xXryUUaeoxm
      DdixswiVfLWYLFd9x2s/fpqHHn2sgjscRZ4zM471yKG84WoRsdKU9PJtzlw+y/jwSRp2TpQE
      F9tgAyyQzpJlOd//1lMcPHIn5sjdKB2Up75qtFpjiaKIG4sIpTWRNQyGM3rdBs430EqS5TnD
      fp9IQy3Vld9OtHyOrpt3vmLeVacapaKquesqi4tKNSwFssKprS2Dc2dSI00ihsMpRT7HA2kS
      0Wo1mEwcopjvbDQevIjC60czIrVoqCucB3ydtNbGuSllMQinbyGQkQ5/WQlEFIJwjCmxzi5j
      LoUUeBPsYlZXWhRFjek0wxrACqSsYfKCseozlH3sdsnRhsQX19C9DzGdldRq9YoCGzB/gDip
      74hLK1M7PEwLz+mpxutbS1tVpY1w1lPmNmwEZQi9l1oscyB+Uqj9e2Xc3g3UWtajg1ws33IV
      7GIAACAASURBVP6Z33TgN1l1e6vjVYWzVSlg1phlwpH3nqsYPtN4hWuVXcDX9JBy7vgDu4bw
      dol5OuuYTSe8+P2vc+DIHaT1Gu3uCudOn6K7ss50nqGjmLTe5Or505TzOU9+/NP8+PvfptVY
      Y7h9lU5xkIkYUsgRThTvCrVJZT1MUm+IZY3CZSQqJbc5EomWMWVZ0pLr1PQK3giUjIhVAj5I
      78PSH6wtZMXkcI6lZiAEa3icd0gdFiVnLVoqEhUjvMdUEnutNFIojC+RJsbYEq00QgWWRKQM
      fv4Wpv8jvBmCjBHRCiJaR8oIIWuQ7MfrDZyPMc7hTIYrLaLqgwgPhThIVDuKG36PODmFyy7i
      ZAKdR7kW97iYv37L+7XYtMSufyQKjQ6bhRCsi32kor6EHXY0InX2dWoMxgPOm1co5RTnBeNZ
      j61sLyO3gtMKEYHE0tAjetE1OtEWWpRYr3EorFfUKu+hfenZJX8eQpBQoFTaivool2rWhWOF
      hyWXfDQccur1V3HWsnHsfqKXX8A5y/GHPsL4xafJ6i10nNJ569sIHXPpkuOd2ZR6s8lkNOSR
      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
      2P7iM0THx5JXth6fx0Pprm2LZv9CaIxGohISGGprY6ClBZ3JhNftIq2oCJlcTn9zaJQ5OTrK
      SGcnE0PDS2rP3ZAkiYJNpUyNT+BxubGkJmNdkcbY4AiiGKT9WgOiKNLf3oVjaIQdLz8LQFdj
      KwBle57Amp6GbVU2glpN4eYNKFUCiggFW587wEhvP+X7d6PR6dj5g+fobm5jx0uHwv/ReyGp
      qJiu8+eQJAmlRkOEoEJlNOJzufB7PPjcboYaG7DmF5K19QkAVEYjKr1x0d1Baq2GQ//wEyqO
      HKPlylUS01NZu23zgvsujwCWEJlchtaox5abQ0ZhHmqdlpUFeZz40zsAxCcnMeNy0dvaTnR8
      HHVnKtEY9MgVirAbRB8VSWp2Bk2Xaqg8ejxcKwZArdMSoQwFwPSmKOQKBVqjAUGlQpQktEYD
      crmcw7/+HQd//hqC+uHWMZ9xuak4coy0VZmYLQlcOV1BhCBQfmBP+OGqO3ueoe5eRFFk075d
      TNgdNFfXkrN+DUkrbVw9ex77wBClu58I35MZl5vzn36G0WRi7bbNTI5PUHXyNAmpSawuW7+o
      gbtEWyqJttTweuHmDeFln8fLY0/vQx9pJDohbt5xX5ctANDotKzf8Xh4Pau4YMFz23KzsS2a
      5QsTlRBPbGoK9p4e4mw2knJyMMaaCQYC4fTQ5NW5GONicfT1E/D5EDQaohLil9iyOyOoVKE8
      /zkkZ64IL5cf2ItKrSa3ZM28fYq2bJy3nll0MzYw976v274lvGyIiqRk59b7tjEqKZmm45+S
      d+BpOiorQi6eoIhCEAjM+v9Vej2Ork7c4yG3bcvnJ7AWFjPcdH1ePaNvi3fGw9T4BHkbSxju
      6UMSJcZG7AT9fgS1mlirJbzvsg5gEblXHcDcQl+iKIaUiDLZHQtR+Txeqk5+yaRjjNScTHJL
      192XXTWnzlD0ePmi9oxv5VYdAEDDhSoC/gB5G9bPxhMlPvjNH9j9oxfDQdQZlxufx8PxN97h
      qZ+8wke/e4ODP3+Vj//vT2x5+kmqT51l3Y4tXP7sNHtefQmAU3/5gKw1hbTV1rOycDVXTlew
      +eA+Ko4c47GDe4k0P5go7X50AN8VbtUB3C/TY2NoIyMfWoG0b6MDeBgspANwj48hk8tRCAJK
      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
    </thumbnail>
  </thumbnails>
</workbook>
