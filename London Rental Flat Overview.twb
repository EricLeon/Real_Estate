<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0605.1023                               -->
<workbook original-version='18.1' source-build='2021.2.0 (20212.21.0605.1023)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DashboardMttwImageObject />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='color' value='#333333' />
    </style-rule>
    <style-rule element='title'>
      <format attr='font-size' value='12' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <style-rule element='tooltip'>
      <format attr='color' value='#333333' />
    </style-rule>
    <style-rule element='all'>
      <format attr='font-family' value='calibri' />
      <format attr='color' value='#333333' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='By Borough' caption='Date Param' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rent By Scrape Date&quot;'>
        <calculation class='tableau' formula='&quot;Rent By Scrape Date&quot;' />
        <aliases>
          <alias key='&quot;Rent By Available Date&quot;' value='By Available Date' />
          <alias key='&quot;Rent By Scrape Date&quot;' value='By Borough' />
        </aliases>
        <members>
          <member alias='By Borough' value='&quot;Rent By Scrape Date&quot;' />
          <member alias='By Available Date' value='&quot;Rent By Available Date&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='all_rental_data' inline='true' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_rental_data' name='textscan.0iqqcd00uvkfdr13obhyg1v0kyv5'>
            <connection class='textscan' directory='/Users/eric/Desktop/PYTHON/Portfolio Projects/real estate' filename='all_rental_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0iqqcd00uvkfdr13obhyg1v0kyv5' name='all_rental_data.csv' table='[all_rental_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='property_id' ordinal='0' />
            <column datatype='string' name='property_link' ordinal='1' />
            <column datatype='string' name='listing_title' ordinal='2' />
            <column datatype='string' name='description' ordinal='3' />
            <column datatype='string' name='location' ordinal='4' />
            <column datatype='real' name='num_bedrooms' ordinal='5' />
            <column datatype='real' name='num_bathrooms' ordinal='6' />
            <column datatype='integer' name='max_tenants' ordinal='7' />
            <column datatype='string' name='deposit' ordinal='8' />
            <column datatype='real' name='rent_pcm' ordinal='9' />
            <column datatype='string' name='bills_included' ordinal='10' />
            <column datatype='string' name='student_friendly' ordinal='11' />
            <column datatype='string' name='family_friendly' ordinal='12' />
            <column datatype='string' name='pet_friendly' ordinal='13' />
            <column datatype='string' name='smoker_friendly' ordinal='14' />
            <column datatype='date' date-parse-format='dd-MMM-yy|#|#|dd MMMM, yyyy' name='available_from' ordinal='15' />
            <column datatype='string' name='min_tenancy_months' ordinal='16' />
            <column datatype='string' name='garden' ordinal='17' />
            <column datatype='string' name='parking' ordinal='18' />
            <column datatype='string' name='fireplace' ordinal='19' />
            <column datatype='string' name='furnishing' ordinal='20' />
            <column datatype='string' name='closest_station' ordinal='21' />
            <column datatype='string' name='closest_station_mins' ordinal='22' />
            <column datatype='string' name='postcode' ordinal='23' />
            <column datatype='date' date-parse-format='dd-MMM-yy|#|#|dd MMMM yyyy' name='scrape_date' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0iqqcd00uvkfdr13obhyg1v0kyv5' name='all_rental_data.csv' table='[all_rental_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='property_id' ordinal='0' />
            <column datatype='string' name='property_link' ordinal='1' />
            <column datatype='string' name='listing_title' ordinal='2' />
            <column datatype='string' name='description' ordinal='3' />
            <column datatype='string' name='location' ordinal='4' />
            <column datatype='real' name='num_bedrooms' ordinal='5' />
            <column datatype='real' name='num_bathrooms' ordinal='6' />
            <column datatype='integer' name='max_tenants' ordinal='7' />
            <column datatype='string' name='deposit' ordinal='8' />
            <column datatype='real' name='rent_pcm' ordinal='9' />
            <column datatype='string' name='bills_included' ordinal='10' />
            <column datatype='string' name='student_friendly' ordinal='11' />
            <column datatype='string' name='family_friendly' ordinal='12' />
            <column datatype='string' name='pet_friendly' ordinal='13' />
            <column datatype='string' name='smoker_friendly' ordinal='14' />
            <column datatype='date' date-parse-format='dd-MMM-yy|#|#|dd MMMM, yyyy' name='available_from' ordinal='15' />
            <column datatype='string' name='min_tenancy_months' ordinal='16' />
            <column datatype='string' name='garden' ordinal='17' />
            <column datatype='string' name='parking' ordinal='18' />
            <column datatype='string' name='fireplace' ordinal='19' />
            <column datatype='string' name='furnishing' ordinal='20' />
            <column datatype='string' name='closest_station' ordinal='21' />
            <column datatype='string' name='closest_station_mins' ordinal='22' />
            <column datatype='string' name='postcode' ordinal='23' />
            <column datatype='date' date-parse-format='dd-MMM-yy|#|#|dd MMMM yyyy' name='scrape_date' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[property_id]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>property_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[property_link]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>property_link</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listing_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[listing_title]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>listing_title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_bedrooms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[num_bedrooms]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>num_bedrooms</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_bathrooms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[num_bathrooms]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>num_bathrooms</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_tenants</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_tenants]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>max_tenants</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deposit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deposit]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>deposit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rent_pcm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rent_pcm]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>rent_pcm</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bills_included</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bills_included]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>bills_included</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>student_friendly</remote-name>
            <remote-type>129</remote-type>
            <local-name>[student_friendly]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>student_friendly</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>family_friendly</remote-name>
            <remote-type>129</remote-type>
            <local-name>[family_friendly]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>family_friendly</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pet_friendly</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pet_friendly]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>pet_friendly</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>smoker_friendly</remote-name>
            <remote-type>129</remote-type>
            <local-name>[smoker_friendly]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>smoker_friendly</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>available_from</remote-name>
            <remote-type>7</remote-type>
            <local-name>[available_from]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>available_from</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_tenancy_months</remote-name>
            <remote-type>129</remote-type>
            <local-name>[min_tenancy_months]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>min_tenancy_months</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>garden</remote-name>
            <remote-type>129</remote-type>
            <local-name>[garden]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>garden</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parking</remote-name>
            <remote-type>129</remote-type>
            <local-name>[parking]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>parking</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fireplace</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fireplace]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>fireplace</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>furnishing</remote-name>
            <remote-type>129</remote-type>
            <local-name>[furnishing]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>furnishing</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>closest_station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[closest_station]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>closest_station</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>closest_station_mins</remote-name>
            <remote-type>129</remote-type>
            <local-name>[closest_station_mins]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>closest_station_mins</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postcode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[postcode]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>postcode</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scrape_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[scrape_date]</local-name>
            <parent-name>[all_rental_data.csv]</parent-name>
            <remote-alias>scrape_date</remote-alias>
            <ordinal>24</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
      </column>
      <column caption='# Properties' datatype='integer' name='[Calculation_719379691610189826]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([property_id])' />
      </column>
      <column caption='Days On Market' datatype='integer' name='[Calculation_768919287822987264]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [property_id]: COUNTD([scrape_date])}' />
      </column>
      <column aggregation='Sum' caption='Date Split Calc' datatype='integer' name='[Calculation_802133335129923585]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Rent By Scrape Date&apos; THEN 1 ELSE 0 END' />
      </column>
      <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
      </column>
      <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
      </column>
      <column caption='Days on Market' datatype='integer' name='[Calculation_888546153548345344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [property_id]: COUNTD([scrape_date])}' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='all_rental_data.csv' datatype='table' name='[__tableau_internal_object_id__].[all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B]' role='measure' type='quantitative' />
      <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
      <column caption='Bills Included' datatype='string' name='[bills_included]' role='dimension' type='nominal' />
      <column caption='Closest Station' datatype='string' name='[closest_station]' role='dimension' type='nominal' />
      <column caption='Closest Station Mins' datatype='string' default-role='measure' default-type='quantitative' name='[closest_station_mins]' role='dimension' type='nominal' />
      <column caption='Deposit' datatype='string' name='[deposit]' role='dimension' type='nominal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Family Friendly' datatype='string' name='[family_friendly]' role='dimension' type='nominal' />
      <column caption='Fireplace' datatype='string' name='[fireplace]' role='dimension' type='nominal' />
      <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
      <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
      <column caption='Listing Title' datatype='string' name='[listing_title]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Max Tenants' datatype='integer' name='[max_tenants]' role='measure' type='quantitative' />
      <column caption='Min Tenancy Months' datatype='string' name='[min_tenancy_months]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='# Baths' datatype='real' name='[num_bathrooms]' role='dimension' type='ordinal' />
      <column caption='# Beds' datatype='real' name='[num_bedrooms]' role='dimension' type='ordinal' />
      <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
      <column caption='Pet Friendly' datatype='string' name='[pet_friendly]' role='dimension' type='nominal' />
      <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
      <column caption='Property Link' datatype='string' name='[property_link]' role='dimension' type='nominal' />
      <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
      <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
      <column caption='Smoker Friendly' datatype='string' name='[smoker_friendly]' role='dimension' type='nominal' />
      <column caption='Student Friendly' datatype='string' name='[student_friendly]' role='dimension' type='nominal' />
      <column-instance column='[rent_pcm]' derivation='Avg' name='[avg:rent_pcm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rent_pcm]' derivation='Median' name='[med:rent_pcm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_719379691610189826]' derivation='User' name='[usr:Calculation_719379691610189826:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Borough)' hidden='true' name='[Action (Borough)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_816770033929490432]' />
        </groupfilter>
      </group>
      <group caption='Action (Postcode)' hidden='true' name='[Action (Postcode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[postcode]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Postcode)' hidden='true' name='[Tooltip (Postcode)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[postcode]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Still On Market,Postcode)' hidden='true' name='[Tooltip (Still On Market,Postcode)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_719379691605893121]' />
          <groupfilter function='level-members' level='[postcode]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_719379691605893121:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08d00uo1ue0adw1bnxbw40m8rntt].[med:rent_pcm:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-date-format>*dd-mmm-yy</default-date-format>
      <datasource-dependencies datasource='Parameters'>
        <column alias='By Borough' caption='Date Param' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rent By Scrape Date&quot;'>
          <calculation class='tableau' formula='&quot;Rent By Scrape Date&quot;' />
          <aliases>
            <alias key='&quot;Rent By Available Date&quot;' value='By Available Date' />
            <alias key='&quot;Rent By Scrape Date&quot;' value='By Borough' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all_rental_data.csv' id='all_rental_data.csv_D2FFBF284E5B4934A52E162E1A5A254B'>
            <properties context=''>
              <relation connection='textscan.0iqqcd00uvkfdr13obhyg1v0kyv5' name='all_rental_data.csv' table='[all_rental_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='property_id' ordinal='0' />
                  <column datatype='string' name='property_link' ordinal='1' />
                  <column datatype='string' name='listing_title' ordinal='2' />
                  <column datatype='string' name='description' ordinal='3' />
                  <column datatype='string' name='location' ordinal='4' />
                  <column datatype='real' name='num_bedrooms' ordinal='5' />
                  <column datatype='real' name='num_bathrooms' ordinal='6' />
                  <column datatype='integer' name='max_tenants' ordinal='7' />
                  <column datatype='string' name='deposit' ordinal='8' />
                  <column datatype='real' name='rent_pcm' ordinal='9' />
                  <column datatype='string' name='bills_included' ordinal='10' />
                  <column datatype='string' name='student_friendly' ordinal='11' />
                  <column datatype='string' name='family_friendly' ordinal='12' />
                  <column datatype='string' name='pet_friendly' ordinal='13' />
                  <column datatype='string' name='smoker_friendly' ordinal='14' />
                  <column datatype='date' date-parse-format='dd-MMM-yy|#|#|dd MMMM, yyyy' name='available_from' ordinal='15' />
                  <column datatype='string' name='min_tenancy_months' ordinal='16' />
                  <column datatype='string' name='garden' ordinal='17' />
                  <column datatype='string' name='parking' ordinal='18' />
                  <column datatype='string' name='fireplace' ordinal='19' />
                  <column datatype='string' name='furnishing' ordinal='20' />
                  <column datatype='string' name='closest_station' ordinal='21' />
                  <column datatype='string' name='closest_station_mins' ordinal='22' />
                  <column datatype='string' name='postcode' ordinal='23' />
                  <column datatype='date' date-parse-format='dd-MMM-yy|#|#|dd MMMM yyyy' name='scrape_date' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
      <datasources>
        <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
      </datasources>
      <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
        <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
        </column>
        <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
        </column>
        <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
        <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
        <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
        <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
        <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
        <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
        <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
        <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
        <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
        <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
        <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
        <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]'>
        <groupfilter function='member' level='[none:Calculation_719379691605893121:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_816770033929490432:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]' included-values='all' />
      <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]'>
        <groupfilter function='member' level='[none:furnishing:nk]' member='&quot;Furnished&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]'>
        <groupfilter function='level-members' level='[none:garden:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]'>
        <groupfilter function='level-members' level='[none:parking:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]'>
        <groupfilter function='level-members' level='[none:postcode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]' included-values='in-range-or-null'>
        <min>570.0</min>
        <max>1500.0</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Visit Listing' name='[Action1_51F15CEFC7C34818B17E56C731E378F1]'>
      <source dashboard='London Rental Flat Overview' type='sheet' worksheet='Data Detail' />
      <link caption='' expression='https://www.openrent.co.uk//&lt;[property_id]&gt;' />
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_362B439DEC2140838165D7179AA66AF6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='London Rental Flat Overview' type='sheet' worksheet='Flat Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='London Rental Flat Overview' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_79184BA9BC234F8586E6F2A258202FBE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='London Rental Flat Overview' type='sheet' worksheet='Rent By Borough' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='London Rental Flat Overview' />
      </command>
    </action>
    <datasources>
      <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
    </datasources>
    <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
      <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='# Properties'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column-instance column='[property_id]' derivation='CountD' name='[ctd:property_id:qk]' pivot='key' type='quantitative' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Borough)]'>
            <groupfilter function='level-members' level='[Calculation_816770033929490432]' user:ui-action-filter='[Action3_79184BA9BC234F8586E6F2A258202FBE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action2_362B439DEC2140838165D7179AA66AF6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Borough)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='16' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='normal' />
            <format attr='color' value='#666666' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='9' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Properties still on the market.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B98E830A-BC1B-4C42-A222-0CAFCBB8EB39}' />
    </worksheet>
    <worksheet name='# Scraped Sanity'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='# Properties' datatype='integer' name='[Calculation_719379691610189826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([property_id])' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[scrape_date]' derivation='None' name='[none:scrape_date:ok]' pivot='key' type='ordinal' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_719379691610189826]' derivation='User' name='[usr:Calculation_719379691610189826:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:scrape_date:ok] / [federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{75CFF424-BE0E-47AA-8AC2-0D29A47A9C1E}' />
    </worksheet>
    <worksheet name='Average Baths'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column-instance column='[num_bathrooms]' derivation='Avg' name='[avg:num_bathrooms:qk]' pivot='key' type='quantitative' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='# Baths' datatype='real' name='[num_bathrooms]' role='dimension' type='ordinal' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Borough)]'>
            <groupfilter function='level-members' level='[Calculation_816770033929490432]' user:ui-action-filter='[Action3_79184BA9BC234F8586E6F2A258202FBE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action2_362B439DEC2140838165D7179AA66AF6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Borough)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='70' />
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:num_bathrooms:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='16' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:num_bathrooms:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Average number of Bathrooms.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{50A44A0D-34AF-4025-B4E9-5B6230C59DB3}' />
    </worksheet>
    <worksheet name='Average Beds'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column-instance column='[num_bedrooms]' derivation='Avg' name='[avg:num_bedrooms:qk]' pivot='key' type='quantitative' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='# Beds' datatype='real' name='[num_bedrooms]' role='dimension' type='ordinal' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Borough)]'>
            <groupfilter function='level-members' level='[Calculation_816770033929490432]' user:ui-action-filter='[Action3_79184BA9BC234F8586E6F2A258202FBE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action2_362B439DEC2140838165D7179AA66AF6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Borough)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='89' />
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:num_bedrooms:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='16' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:num_bedrooms:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Average number of Bedrooms.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4C346898-3402-44AA-A95E-7629B8DC0DBF}' />
    </worksheet>
    <worksheet name='Average Rent'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column-instance column='[rent_pcm]' derivation='Avg' name='[avg:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column caption='Min Tenancy Months' datatype='string' name='[min_tenancy_months]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_tenancy_months]' derivation='None' name='[none:min_tenancy_months:nk]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Borough)]'>
            <groupfilter function='level-members' level='[Calculation_816770033929490432]' user:ui-action-filter='[Action3_79184BA9BC234F8586E6F2A258202FBE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action2_362B439DEC2140838165D7179AA66AF6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:nk]'>
            <groupfilter function='level-members' level='[none:min_tenancy_months:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Borough)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' value='c&quot;Â£&quot;#,##0.00;-&quot;Â£&quot;#,##0.00' />
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='16' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='9' />
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Average rent PCM (Â£).</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{935787A2-80F5-44C0-9D19-15ED33B5ADCE}' />
    </worksheet>
    <worksheet name='Data Detail'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Days on Market' datatype='integer' name='[Calculation_888546153548345344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [property_id]: COUNTD([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column caption='Bills Included' datatype='string' name='[bills_included]' role='dimension' type='nominal' />
            <column caption='Closest Station Mins' datatype='string' default-role='measure' default-type='quantitative' name='[closest_station_mins]' role='dimension' type='nominal' />
            <column caption='Deposit' datatype='string' name='[deposit]' role='dimension' type='nominal' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column caption='Family Friendly' datatype='string' name='[family_friendly]' role='dimension' type='nominal' />
            <column caption='Fireplace' datatype='string' name='[fireplace]' role='dimension' type='nominal' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column caption='Min Tenancy Months' datatype='string' name='[min_tenancy_months]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:ok]' pivot='key' type='ordinal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bills_included]' derivation='None' name='[none:bills_included:nk]' pivot='key' type='nominal' />
            <column-instance column='[closest_station_mins]' derivation='None' name='[none:closest_station_mins:nk]' pivot='key' type='nominal' />
            <column-instance column='[deposit]' derivation='None' name='[none:deposit:nk]' pivot='key' type='nominal' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[family_friendly]' derivation='None' name='[none:family_friendly:nk]' pivot='key' type='nominal' />
            <column-instance column='[fireplace]' derivation='None' name='[none:fireplace:nk]' pivot='key' type='nominal' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_tenancy_months]' derivation='None' name='[none:min_tenancy_months:nk]' pivot='key' type='nominal' />
            <column-instance column='[num_bathrooms]' derivation='None' name='[none:num_bathrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[num_bedrooms]' derivation='None' name='[none:num_bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[pet_friendly]' derivation='None' name='[none:pet_friendly:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[property_id]' derivation='None' name='[none:property_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[property_link]' derivation='None' name='[none:property_link:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='# Baths' datatype='real' name='[num_bathrooms]' role='dimension' type='ordinal' />
            <column caption='# Beds' datatype='real' name='[num_bedrooms]' role='dimension' type='ordinal' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Pet Friendly' datatype='string' name='[pet_friendly]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Property Link' datatype='string' name='[property_link]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_888546153548345344]' derivation='Sum' name='[sum:Calculation_888546153548345344:ok]' pivot='key' type='ordinal' />
            <column-instance column='[rent_pcm]' derivation='Sum' name='[sum:rent_pcm:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Borough)]'>
            <groupfilter function='level-members' level='[Calculation_816770033929490432]' user:ui-action-filter='[Action3_79184BA9BC234F8586E6F2A258202FBE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action2_362B439DEC2140838165D7179AA66AF6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_id:nk]' direction='ASC' measure-to-sort-by='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:closest_station_mins:nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Borough)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='31' />
            <format attr='height' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_link:nk]' value='36' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='48' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_link:nk]' value='244' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:ok]' value='88' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]' value='156' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[sum:Calculation_888546153548345344:ok]' value='64' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok]' value='52' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok]' value='68' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:closest_station_mins:nk]' value='72' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_id:nk]' value='false' />
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[sum:rent_pcm:ok]' value='c&quot;Â£&quot;#,##0.00;-&quot;Â£&quot;#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:bills_included:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:family_friendly:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:fireplace:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:pet_friendly:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:deposit:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:description:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run italic='true' underline='true'>Tenancy Information:</run>
                <run>Ã&#10;</run>
                <run bold='true'>Deposit (Â£):&#9;</run>
                <run><![CDATA[Â£<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:deposit:nk]>
]]></run>
                <run bold='true'>Minimum Tenancy (Months):&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:nk]>

]]></run>
                <run italic='true' underline='true'>Misc Information:</run>
                <run>Ã&#10;</run>
                <run bold='true'>Postcode:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]>
]]></run>
                <run bold='true'>Pet Friendly:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:pet_friendly:nk]>
]]></run>
                <run bold='true'>Bills Included:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:bills_included:nk]>
]]></run>
                <run bold='true'>Family Friendly:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:family_friendly:nk]>
]]></run>
                <run bold='true'>Fireplace:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:fireplace:nk]>
]]></run>
                <run bold='true'>Garden:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]>
]]></run>
                <run bold='true'>Parking:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]>
]]></run>
                <run bold='true'>Description:&#9;</run>
                <run><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:description:nk]>
]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_id:nk] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[sum:Calculation_888546153548345344:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[sum:rent_pcm:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:closest_station_mins:nk] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk] / [federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_link:nk])))))))))</rows>
        <cols />
      </table>
      <simple-id uuid='{E82E9F1A-0918-4BB4-A8CB-804A5C293DC7}' />
    </worksheet>
    <worksheet name='Flat Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Rent &amp; # Of Properties</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column-instance column='[rent_pcm]' derivation='Avg' name='[avg:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_id]' derivation='CountD' name='[ctd:property_id:qk]' pivot='key' type='quantitative' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Borough)]'>
            <groupfilter function='level-members' level='[Calculation_816770033929490432]' user:ui-action-filter='[Action3_79184BA9BC234F8586E6F2A258202FBE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Borough)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]' num-steps='6' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#00ffb7</color>
                <color>#76ecca</color>
                <color>#d9d9d9</color>
                <color>#ec907c</color>
                <color>#ff3a0e</color>
              </color-palette>
            </encoding>
            <encoding attr='size' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' field-type='quantitative' max='1500.0' max-size='1' min='650.0' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]' value='# Listings'>
              <formatted-text>
                <run fontsize='8' italic='true'># Listings</run>
              </formatted-text>
            </format>
            <format attr='size' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' value='Avg. Rent (Â£PCM)'>
              <formatted-text>
                <run fontsize='8' italic='true'>Avg. Rent (Â£PCM)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='hillshade_highlight_bright' value='false' />
            <format attr='enabled' id='hillshade_highlight_med' value='false' />
            <format attr='enabled' id='hillshade_shadow_faint' value='false' />
            <format attr='enabled' id='hillshade_shadow_med' value='false' />
            <format attr='enabled' id='hillshade_shadow_dark' value='false' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='false' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-2-boundaries' value='false' />
            <format attr='enabled' id='admin-2-boundaries-dispute' value='false' />
            <format attr='enabled' id='country-label-sm' value='false' />
            <format attr='enabled' id='country-label-md' value='false' />
            <format attr='enabled' id='country-label-lg' value='false' />
            <format attr='enabled' id='admin-3-4-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-3-4-boundaries' value='false' />
            <format attr='enabled' id='state-label-sm' value='false' />
            <format attr='enabled' id='state-label-md' value='false' />
            <format attr='enabled' id='state-label-lg' value='false' />
            <format attr='enabled' id='marine-label-sm-ln' value='false' />
            <format attr='enabled' id='marine-label-sm-pt' value='false' />
            <format attr='enabled' id='marine-label-md-ln' value='false' />
            <format attr='enabled' id='marine-label-md-pt' value='false' />
            <format attr='enabled' id='marine-label-lg-ln' value='false' />
            <format attr='enabled' id='marine-label-lg-pt' value='false' />
            <format attr='enabled' id='waterway-label' value='false' />
            <format attr='enabled' id='water-label-sm' value='false' />
            <format attr='enabled' id='water-label' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.25' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]' />
              <size column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]' />
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Postcode:&#9;</run>
                <run bold='true'><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]>]]></run>
                <run>&#10;Average Rent PCM:&#9;</run>
                <run bold='true'><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]>]]></run>
                <run>&#10;# of Properties:&#9;</run>
                <run bold='true'><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]>]]></run>
                <run>Ã&#10;&#10;</run>
                <run bold='true' italic='true' underline='true'>Flat Detail:</run>
                <run>Ã&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Map Tooltip" maxwidth="600" maxheight="600" filter="<All Fields>">]]></run>
                <run>Ã&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.62602740526199341' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Latitude (generated)]</rows>
        <cols>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3E9F7505-5E69-4E78-B5E0-76A5372B7081}' />
    </worksheet>
    <worksheet name='Map Tooltip'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
          </datasources>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='# Properties' datatype='integer' name='[Calculation_719379691610189826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([property_id])' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column caption='Deposit' datatype='string' name='[deposit]' role='dimension' type='nominal' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='Median' name='[med:rent_pcm:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deposit]' derivation='None' name='[none:deposit:nk]' pivot='key' type='nominal' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[num_bathrooms]' derivation='None' name='[none:num_bathrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[num_bedrooms]' derivation='None' name='[none:num_bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='# Baths' datatype='real' name='[num_bathrooms]' role='dimension' type='ordinal' />
            <column caption='# Beds' datatype='real' name='[num_bedrooms]' role='dimension' type='ordinal' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_719379691610189826]' derivation='User' name='[usr:Calculation_719379691610189826:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Tooltip (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action - Sheet 10]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Tooltip (Still On Market,Postcode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Map Tooltip]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_719379691605893121]' />
              <groupfilter function='level-members' level='[postcode]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Tooltip (Postcode)]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Tooltip (Still On Market,Postcode)]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='5' />
            <format attr='height' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:ok]' value='28' />
            <format attr='height' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:deposit:nk]' value='40' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='36' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[med:rent_pcm:ok]' value='68' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]' value='92' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok]' value='52' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok]' value='56' />
            <format attr='width' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:ok]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[med:rent_pcm:ok]' value='c&quot;Â£&quot;#,##0;-&quot;Â£&quot;#,##0' />
            <format attr='wrap' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]' value='on' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-transparency' value='0' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:ok] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk] / ([federated.08d00uo1ue0adw1bnxbw40m8rntt].[med:rent_pcm:ok] / [federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:deposit:nk])))))</rows>
        <cols />
      </table>
      <simple-id uuid='{62A2A8CD-E9EB-41F8-ADE6-E6787A5F305A}' />
    </worksheet>
    <worksheet name='Rent By Available Date'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='By Borough' caption='Date Param' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rent By Scrape Date&quot;'>
              <calculation class='tableau' formula='&quot;Rent By Scrape Date&quot;' />
              <aliases>
                <alias key='&quot;Rent By Available Date&quot;' value='By Available Date' />
                <alias key='&quot;Rent By Scrape Date&quot;' value='By Borough' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='# Properties' datatype='integer' name='[Calculation_719379691610189826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([property_id])' />
            </column>
            <column aggregation='Sum' caption='Date Split Calc' datatype='integer' name='[Calculation_802133335129923585]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Rent By Scrape Date&apos; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column-instance column='[rent_pcm]' derivation='Avg' name='[avg:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_802133335129923585]' derivation='None' name='[none:Calculation_802133335129923585:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
            <column-instance column='[available_from]' derivation='Week-Trunc' name='[twk:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_719379691610189826]' derivation='User' name='[usr:Calculation_719379691610189826:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Borough)]'>
            <groupfilter function='level-members' level='[Calculation_816770033929490432]' user:ui-action-filter='[Action3_79184BA9BC234F8586E6F2A258202FBE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action2_362B439DEC2140838165D7179AA66AF6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_802133335129923585:ok]'>
            <groupfilter function='member' level='[none:Calculation_802133335129923585:ok]' member='0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_802133335129923585:ok]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Borough)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' scope='rows' value='Avg Rent PCM (Â£)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' value='c#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <lod column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Available From Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[twk:available_from:qk]>]]></run>
                <run>Ã&#10;</run>
                <run fontcolor='#787878'>Average Rent PCM:&#9;</run>
                <run bold='true'><![CDATA[Â£<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]>]]></run>
                <run>Ã&#10;</run>
                <run fontcolor='#898989'>Properties Available:</run>
                <run>Ã&#9;</run>
                <run bold='true'><![CDATA[<[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]</rows>
        <cols>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[twk:available_from:qk]</cols>
      </table>
      <simple-id uuid='{7172DDF7-E204-4F14-A511-AB521FD6B15C}' />
    </worksheet>
    <worksheet name='Rent By Borough'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Rent By Borough</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='By Borough' caption='Date Param' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rent By Scrape Date&quot;'>
              <calculation class='tableau' formula='&quot;Rent By Scrape Date&quot;' />
              <aliases>
                <alias key='&quot;Rent By Available Date&quot;' value='By Available Date' />
                <alias key='&quot;Rent By Scrape Date&quot;' value='By Borough' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
            <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
            </column>
            <column caption='# Properties' datatype='integer' name='[Calculation_719379691610189826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([property_id])' />
            </column>
            <column aggregation='Sum' caption='Date Split Calc' datatype='integer' name='[Calculation_802133335129923585]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;Rent By Scrape Date&apos; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
            </column>
            <column caption='Most Recent Data Scrape' datatype='date' name='[Calculation_863705986603687936]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED: MAX([scrape_date])}' />
            </column>
            <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
            <column-instance column='[rent_pcm]' derivation='Avg' name='[avg:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
            <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_802133335129923585]' derivation='None' name='[none:Calculation_802133335129923585:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
            <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
            <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
            <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
            <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
            <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Property Id' datatype='string' name='[property_id]' role='dimension' type='nominal' />
            <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
            <column caption='Scrape Date' datatype='date' name='[scrape_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_719379691610189826]' derivation='User' name='[usr:Calculation_719379691610189826:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]'>
            <groupfilter function='level-members' level='[postcode]' user:ui-action-filter='[Action2_362B439DEC2140838165D7179AA66AF6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_802133335129923585:ok]'>
            <groupfilter function='member' level='[none:Calculation_802133335129923585:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_802133335129923585:ok]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</column>
            <column>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[Action (Postcode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' value='c&quot;Â£&quot;#,##0.00;-&quot;Â£&quot;#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' value='c#,##0;-#,##0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#f28e2b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' />
              <color column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:qk]' />
              <text column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]' />
              <text column='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[avg:rent_pcm:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0E970F95-65AC-438A-B0F3-E577B3E314AC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='London Rental Flat Overview'>
      <style />
      <size maxheight='1500' maxwidth='1000' minheight='1500' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='all_rental_data' name='federated.08d00uo1ue0adw1bnxbw40m8rntt' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='By Borough' caption='Date Param' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rent By Scrape Date&quot;'>
          <calculation class='tableau' formula='&quot;Rent By Scrape Date&quot;' />
          <aliases>
            <alias key='&quot;Rent By Available Date&quot;' value='By Available Date' />
            <alias key='&quot;Rent By Scrape Date&quot;' value='By Borough' />
          </aliases>
          <members>
            <member alias='By Borough' value='&quot;Rent By Scrape Date&quot;' />
            <member alias='By Available Date' value='&quot;Rent By Available Date&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.08d00uo1ue0adw1bnxbw40m8rntt'>
        <column caption='Still On Market' datatype='boolean' name='[Calculation_719379691605893121]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='{FIXED [property_id]: MAX([scrape_date]) = MAX([Calculation_863705986603687936])}' />
        </column>
        <column caption='Borough' datatype='string' name='[Calculation_816770033929490432]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [postcode] = &apos;E1&apos; THEN &apos;Whitechapel, Stepney, Mile End&apos;&#10;ELSEIF [postcode] = &apos;E1W&apos; THEN &apos;Wapping&apos;&#10;ELSEIF [postcode] = &apos;E2&apos; THEN &apos;Bethnal Green, Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;E3&apos; THEN &apos;Bow, Bromley-by-Bow&apos;&#10;ELSEIF [postcode] = &apos;E4&apos; THEN &apos;Chingford, Highams Park&apos;&#10;ELSEIF [postcode] = &apos;E5&apos; THEN &apos;Clapton&apos;&#10;ELSEIF [postcode] = &apos;E6&apos; THEN &apos;East Ham&apos;&#10;ELSEIF [postcode] = &apos;E7&apos; THEN &apos;Forest Gate, Upton Park&apos;&#10;ELSEIF [postcode] = &apos;E8&apos; THEN &apos;Hackney, Dalston&apos;&#10;ELSEIF [postcode] = &apos;E9&apos; THEN &apos;Hackney, Homerton&apos;&#10;ELSEIF [postcode] = &apos;E10&apos; THEN &apos;Leyton&apos;&#10;ELSEIF [postcode] = &apos;E11&apos; THEN &apos;Leytonstone&apos;&#10;ELSEIF [postcode] = &apos;E12&apos; THEN &apos;Manor Park&apos;&#10;ELSEIF [postcode] = &apos;E13&apos; THEN &apos;Plaistow&apos;&#10;ELSEIF [postcode] = &apos;E14&apos; THEN &apos;Poplar, Millwall, Isle of Dogs, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E15&apos; THEN &apos;Stratford, West Ham&apos;&#10;ELSEIF [postcode] = &apos;E16&apos; THEN &apos;Canning Town, North Woolwich, Docklands&apos;&#10;ELSEIF [postcode] = &apos;E17&apos; THEN &apos;Walthamstow&apos;&#10;ELSEIF [postcode] = &apos;E18&apos; THEN &apos;South Woodford&apos;&#10;ELSEIF [postcode] = &apos;E20&apos; THEN &apos;Olympic Park&apos;&#10;ELSEIF [postcode] = &apos;WC1&apos; THEN &apos;Bloomsbury, Grays Inn&apos;&#10;ELSEIF [postcode] = &apos;WC2&apos; THEN &apos;Covent Garden, Holborn, Strand&apos;&#10;ELSEIF [postcode] = &apos;EC1&apos; THEN &apos;Clerkenwell, Finsbury, Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC2&apos; THEN &apos;Moorgate, Liverpool Street&apos;&#10;ELSEIF [postcode] = &apos;EC3&apos; THEN &apos;Monument, Tower Hill, Aldgate&apos;&#10;ELSEIF [postcode] = &apos;EC4&apos; THEN &apos;Fleet Street, St. Pauls&apos;&#10;ELSEIF [postcode] = &apos;N1&apos; THEN &apos;Islington, Barnsbury, Canonbury&apos;&#10;ELSEIF [postcode] = &apos;N2&apos; THEN &apos;East Finchley&apos;&#10;ELSEIF [postcode] = &apos;N3&apos; THEN &apos;Finchley Central&apos;&#10;ELSEIF [postcode] = &apos;N4&apos; THEN &apos;Finsbury Park, Manor House&apos;&#10;ELSEIF [postcode] = &apos;N5&apos; THEN &apos;Highbury&apos;&#10;ELSEIF [postcode] = &apos;N6&apos; THEN &apos;Highgate&apos;&#10;ELSEIF [postcode] = &apos;N7&apos; THEN &apos;Holloway&apos;&#10;ELSEIF [postcode] = &apos;N8&apos; THEN &apos;Hornsey, Crouch End&apos;&#10;ELSEIF [postcode] = &apos;N9&apos; THEN &apos;Lower Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N10&apos; THEN &apos;Muswell Hill&apos;&#10;ELSEIF [postcode] = &apos;N11&apos; THEN &apos;Friern Barnet, New Southgate&apos;&#10;ELSEIF [postcode] = &apos;N12&apos; THEN &apos;North Finchley, Woodside Park&apos;&#10;ELSEIF [postcode] = &apos;N13&apos; THEN &apos;Palmers Green&apos;&#10;ELSEIF [postcode] = &apos;N14&apos; THEN &apos;Southgate&apos;&#10;ELSEIF [postcode] = &apos;N15&apos; THEN &apos;Seven Sisters&apos;&#10;ELSEIF [postcode] = &apos;N16&apos; THEN &apos;Stoke Newington, Stamford Hill&apos;&#10;ELSEIF [postcode] = &apos;N17&apos; THEN &apos;Tottenham&apos;&#10;ELSEIF [postcode] = &apos;N18&apos; THEN &apos;Upper Edmonton&apos;&#10;ELSEIF [postcode] = &apos;N19&apos; THEN &apos;Archway, Tufnell Park&apos;&#10;ELSEIF [postcode] = &apos;N20&apos; THEN &apos;Whetstone, Totteridge&apos;&#10;ELSEIF [postcode] = &apos;N21&apos; THEN &apos;Winchmore Hill&apos;&#10;ELSEIF [postcode] = &apos;N22&apos; THEN &apos;Wood Green, Alexandra Palace&apos;&#10;ELSEIF [postcode] = &apos;NW1&apos; THEN &apos;Regents Park, Camden Town&apos;&#10;ELSEIF [postcode] = &apos;NW2&apos; THEN &apos;Cricklewood, Neasden&apos;&#10;ELSEIF [postcode] = &apos;NW3&apos; THEN &apos;Hampstead, Swiss Cottage&apos;&#10;ELSEIF [postcode] = &apos;NW4&apos; THEN &apos;Hendon, Brent Cross&apos;&#10;ELSEIF [postcode] = &apos;NW5&apos; THEN &apos;Kentish Town&apos;&#10;ELSEIF [postcode] = &apos;NW6&apos; THEN &apos;West Hampstead, Kilburn, Queens Park&apos;&#10;ELSEIF [postcode] = &apos;NW7&apos; THEN &apos;Mill Hill&apos;&#10;ELSEIF [postcode] = &apos;NW8&apos; THEN &apos;St Johns Wood&apos;&#10;ELSEIF [postcode] = &apos;NW9&apos; THEN &apos;Kinsbury, Colindale&apos;&#10;ELSEIF [postcode] = &apos;NW10&apos; THEN &apos;Willesden, Harlesden, Kensal Green&apos;&#10;ELSEIF [postcode] = &apos;NW11&apos; THEN &apos;Golders Green, Hampstead Gdn Suburb&apos;&#10;ELSEIF [postcode] = &apos;SE1&apos; THEN &apos;Waterloo, Bermondsey, Southwark, Borough&apos;&#10;ELSEIF [postcode] = &apos;SE2&apos; THEN &apos;Abbey Wood&apos;&#10;ELSEIF [postcode] = &apos;SE3&apos; THEN &apos;Blackheath, Westcombe Park&apos;&#10;ELSEIF [postcode] = &apos;SE4&apos; THEN &apos;Brockley, Crofton Park, Honor Oak Park&apos;&#10;ELSEIF [postcode] = &apos;SE5&apos; THEN &apos;Camberwell&apos;&#10;ELSEIF [postcode] = &apos;SE6&apos; THEN &apos;Catford, Hither Green, Bellingham&apos;&#10;ELSEIF [postcode] = &apos;SE7&apos; THEN &apos;Charlton&apos;&#10;ELSEIF [postcode] = &apos;SE8&apos; THEN &apos;Deptford&apos;&#10;ELSEIF [postcode] = &apos;SE9&apos; THEN &apos;Eltham, Mottingham&apos;&#10;ELSEIF [postcode] = &apos;SE10&apos; THEN &apos;Greenwich&apos;&#10;ELSEIF [postcode] = &apos;SE11&apos; THEN &apos;Lambeth&apos;&#10;ELSEIF [postcode] = &apos;SE12&apos; THEN &apos;Lee, Grove Park&apos;&#10;ELSEIF [postcode] = &apos;SE13&apos; THEN &apos;Lewisham, Hither Green&apos;&#10;ELSEIF [postcode] = &apos;SE14&apos; THEN &apos;New Cross, New Cross Gate&apos;&#10;ELSEIF [postcode] = &apos;SE15&apos; THEN &apos;Peckham, Nunhead&apos;&#10;ELSEIF [postcode] = &apos;SE16&apos; THEN &apos;Rotherhithe, South Bermonsey, Surrey Docks&apos;&#10;ELSEIF [postcode] = &apos;SE17&apos; THEN &apos;Walworth, Elephant &amp; Castle&apos;&#10;ELSEIF [postcode] = &apos;SE18&apos; THEN &apos;Woolwich, Plumstead&apos;&#10;ELSEIF [postcode] = &apos;SE19&apos; THEN &apos;Upper Norwood, Crystal Palace&apos;&#10;ELSEIF [postcode] = &apos;SE20&apos; THEN &apos;Penge, Anerley&apos;&#10;ELSEIF [postcode] = &apos;SE21&apos; THEN &apos;Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE22&apos; THEN &apos;East Dulwich&apos;&#10;ELSEIF [postcode] = &apos;SE23&apos; THEN &apos;Forest Hill&apos;&#10;ELSEIF [postcode] = &apos;SE24&apos; THEN &apos;Herne Hill&apos;&#10;ELSEIF [postcode] = &apos;SE25&apos; THEN &apos;South Norwood&apos;&#10;ELSEIF [postcode] = &apos;SE26&apos; THEN &apos;Sydenham&apos;&#10;ELSEIF [postcode] = &apos;SE27&apos; THEN &apos;West Norwood, Tulse Hill&apos;&#10;ELSEIF [postcode] = &apos;SE28&apos; THEN &apos;Thamesmead&apos;&#10;ELSEIF [postcode] = &apos;SW1&apos; THEN &apos;Westminster, Belgravia, Pimlico&apos;&#10;ELSEIF [postcode] = &apos;SW2&apos; THEN &apos;Brixton, Streatham Hill&apos;&#10;ELSEIF [postcode] = &apos;SW3&apos; THEN &apos;Chelsea, Brompton&apos;&#10;ELSEIF [postcode] = &apos;SW4&apos; THEN &apos;Clapham&apos;&#10;ELSEIF [postcode] = &apos;SW5&apos; THEN &apos;Earls Court&apos;&#10;ELSEIF [postcode] = &apos;SW6&apos; THEN &apos;Fulham, Parsons Green&apos;&#10;ELSEIF [postcode] = &apos;SW7&apos; THEN &apos;South Kensington&apos;&#10;ELSEIF [postcode] = &apos;SW8&apos; THEN &apos;South Lambeth, Nine Elms&apos;&#10;ELSEIF [postcode] = &apos;SW9&apos; THEN &apos;Stockwell, Brixton&apos;&#10;ELSEIF [postcode] = &apos;SW10&apos; THEN &apos;West Brompton, Worlds End&apos;&#10;ELSEIF [postcode] = &apos;SW11&apos; THEN &apos;Battersea, Clapham Junction&apos;&#10;ELSEIF [postcode] = &apos;SW12&apos; THEN &apos;Balham&apos;&#10;ELSEIF [postcode] = &apos;SW13&apos; THEN &apos;Barnes, Castelnau&apos;&#10;ELSEIF [postcode] = &apos;SW14&apos; THEN &apos;Mortlake, East Sheen&apos;&#10;ELSEIF [postcode] = &apos;SW15&apos; THEN &apos;Putney, Roehampton&apos;&#10;ELSEIF [postcode] = &apos;SW16&apos; THEN &apos;Streatham, Norbury&apos;&#10;ELSEIF [postcode] = &apos;SW17&apos; THEN &apos;Tooting&apos;&#10;ELSEIF [postcode] = &apos;SW18&apos; THEN &apos;Wandsworth, Earlsfield&apos;&#10;ELSEIF [postcode] = &apos;SW19&apos; THEN &apos;Wimbledon, Merton&apos;&#10;ELSEIF [postcode] = &apos;SW20&apos; THEN &apos;South Wimbledon, Raynes Park&apos;&#10;ELSEIF [postcode] = &apos;W1&apos; THEN &apos;Mayfair, Marylebone, Soho&apos;&#10;ELSEIF [postcode] = &apos;W2&apos; THEN &apos;Bayswater, Paddington&apos;&#10;ELSEIF [postcode] = &apos;W3&apos; THEN &apos;Acton&apos;&#10;ELSEIF [postcode] = &apos;W4&apos; THEN &apos;Chiswick&apos;&#10;ELSEIF [postcode] = &apos;W5&apos; THEN &apos;Ealing&apos;&#10;ELSEIF [postcode] = &apos;W6&apos; THEN &apos;Hammersmith&apos;&#10;ELSEIF [postcode] = &apos;W7&apos; THEN &apos;Hanwell&apos;&#10;ELSEIF [postcode] = &apos;W8&apos; THEN &apos;Kensington&apos;&#10;ELSEIF [postcode] = &apos;W9&apos; THEN &apos;Maida Vale, Warwick Avenue&apos;&#10;ELSEIF [postcode] = &apos;W10&apos; THEN &apos;Ladbroke Grove, North Kensington&apos;&#10;ELSEIF [postcode] = &apos;W11&apos; THEN &apos;Notting Hill, Holland Park&apos;&#10;ELSEIF [postcode] = &apos;W12&apos; THEN &apos;Shepherds Bush&apos;&#10;ELSEIF [postcode] = &apos;W13&apos; THEN &apos;West Ealing&apos;&#10;ELSEIF [postcode] = &apos;W14&apos; THEN &apos;West Kensington&apos;&#10;ELSEIF [postcode] = &apos;EC1N&apos; THEN &apos;Hatton Harden&apos;&#10;ELSEIF [postcode] = &apos;EC1R&apos; THEN &apos;Finsbury&apos;&#10;ELSEIF [postcode] = &apos;EC1V&apos; THEN &apos;Finsbury East, Moorfields Eye Hospital&apos;&#10;ELSEIF [postcode] = &apos;EC1Y&apos; THEN &apos;St Lukes&apos;&#10;ELSEIF [postcode] = &apos;EC2A&apos; THEN &apos;Shoreditch&apos;&#10;ELSEIF [postcode] = &apos;EC2Y&apos; THEN &apos;Barbican&apos;&#10;ELSEIF [postcode] = &apos;EC3R&apos; THEN &apos;Monument&apos;&#10;ELSEIF [postcode] = &apos;EC4A&apos; THEN &apos;Fetter Lane&apos;&#10;ELSEIF [postcode] = &apos;EC4V&apos; THEN &apos;Blackfriars&apos; &#10;ELSEIF [postcode] = &apos;EC1M&apos; THEN &apos;Clerkenwell, Farringdon&apos;&#10;ELSEIF [postcode] = &apos;N1C&apos; THEN &apos;Kings Cross Central&apos;&#10;ELSEIF [postcode] = &apos;SW1P&apos; THEN &apos;Parliament Square&apos;&#10;ELSEIF [postcode] = &apos;SW1V&apos; THEN &apos;Vauxhall Bridge, Grosvenor&apos;&#10;ELSEIF [postcode] = &apos;SW1W&apos; THEN &apos;Lower Belgravia, Chelsea&apos;&#10;ELSEIF [postcode] = &apos;SW1X&apos; THEN &apos;Upper Belgravia&apos;&#10;ELSEIF [postcode] = &apos;SW1Y&apos; THEN &apos;St. James&apos;&apos;&apos;&#10;ELSEIF [postcode] = &apos;W1B&apos; THEN &apos;Portland Place&apos;&#10;ELSEIF [postcode] = &apos;W1D&apos; THEN &apos;Soho&apos;&#10;ELSEIF [postcode] = &apos;W1G&apos; THEN &apos;Harley Street&apos;&#10;ELSEIF [postcode] = &apos;W1H&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1J&apos; THEN &apos;Mayfair (South)&apos;&#10;ELSEIF [postcode] = &apos;W1K&apos; THEN &apos;Mayfair (North)&apos;&#10;ELSEIF [postcode] = &apos;W1T&apos; THEN &apos;Fitzrovia&apos;&#10;ELSEIF [postcode] = &apos;W1U&apos; THEN &apos;Marylebone&apos;&#10;ELSEIF [postcode] = &apos;W1W&apos; THEN &apos;Great Portland Street&apos;&#10;ELSEIF [postcode] = &apos;WC1A&apos; THEN &apos;New Oxford Street&apos;&#10;ELSEIF [postcode] = &apos;WC1B&apos; THEN &apos;Bloomsbury&apos;&#10;ELSEIF [postcode] = &apos;WC1E&apos; THEN &apos;Birkbeck College&apos;&#10;ELSEIF [postcode] = &apos;WC1H&apos; THEN &apos;St. Pancras&apos;&#10;ELSEIF [postcode] = &apos;WC1N&apos; THEN &apos;Russell Square&apos;&#10;ELSEIF [postcode] = &apos;WC1R&apos; THEN &apos;Gray&apos;&apos;s Inn&apos;&#10;ELSEIF [postcode] = &apos;WC1V&apos; THEN &apos;High Holborn&apos;&#10;ELSEIF [postcode] = &apos;WC1X&apos; THEN &apos;King&apos;&apos;s Cross, Finsbury&apos;&#10;ELSEIF [postcode] = &apos;WC2B&apos; THEN &apos;Drury Lane&apos;&#10;ELSEIF [postcode] = &apos;WC2E&apos; THEN &apos;Covent Garden&apos;&#10;ELSEIF [postcode] = &apos;WC2H&apos; THEN &apos;Leicester Square&apos;&#10;ELSEIF [postcode] = &apos;WC2R&apos; THEN &apos;Somerset House&apos;&#10;ELSE [postcode]&#10;END' />
        </column>
        <column caption='Available From' datatype='date' name='[available_from]' role='dimension' type='ordinal' />
        <column caption='Furnishing' datatype='string' name='[furnishing]' role='dimension' type='nominal' />
        <column caption='Garden' datatype='string' name='[garden]' role='dimension' type='nominal' />
        <column caption='Min Tenancy Months' datatype='string' name='[min_tenancy_months]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_719379691605893121]' derivation='None' name='[none:Calculation_719379691605893121:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_816770033929490432]' derivation='None' name='[none:Calculation_816770033929490432:nk]' pivot='key' type='nominal' />
        <column-instance column='[available_from]' derivation='None' name='[none:available_from:qk]' pivot='key' type='quantitative' />
        <column-instance column='[furnishing]' derivation='None' name='[none:furnishing:nk]' pivot='key' type='nominal' />
        <column-instance column='[garden]' derivation='None' name='[none:garden:nk]' pivot='key' type='nominal' />
        <column-instance column='[min_tenancy_months]' derivation='None' name='[none:min_tenancy_months:nk]' pivot='key' type='nominal' />
        <column-instance column='[parking]' derivation='None' name='[none:parking:nk]' pivot='key' type='nominal' />
        <column-instance column='[postcode]' derivation='None' name='[none:postcode:nk]' pivot='key' type='nominal' />
        <column-instance column='[rent_pcm]' derivation='None' name='[none:rent_pcm:qk]' pivot='key' type='quantitative' />
        <column caption='Parking' datatype='string' name='[parking]' role='dimension' type='nominal' />
        <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
        <column caption='Rent PCM' datatype='real' name='[rent_pcm]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98934' id='26' param='horz' type-v2='layout-flow' w='98400' x='800' y='533'>
            <zone h='98934' id='5' param='vert' type-v2='layout-flow' w='98400' x='800' y='533'>
              <zone fixed-size='50' h='3333' id='29' is-fixed='true' param='horz' type-v2='layout-flow' w='98400' x='800' y='533'>
                <zone fixed-size='317' forceUpdate='true' h='3333' id='30' is-fixed='true' type-v2='text' w='32500' x='800' y='533'>
                  <formatted-text>
                    <run bold='true' fontsize='16'>London Rental Flat Overview</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='3333' id='59' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='65900' x='33300' y='533'>
                  <zone alt-text='Image of Apartment Building' h='3334' id='61' is-scaled='1' param='/Users/eric/Desktop/PYTHON/Portfolio Projects/real estate/images/apartment.png' type-v2='bitmap' w='16500' x='33300' y='533'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3334' id='27' mode='checkdropdown' name='# Properties' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]' show-apply='true' type-v2='filter' values='relevant' w='16500' x='49800' y='533'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3334' id='51' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]' show-null-ctrls='false' show-reldate-picker='false' show-slider='false' type-v2='filter' values='relevant' w='16500' x='66300' y='533'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3334' id='28' name='# Properties' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]' show-null-ctrls='false' show-slider='false' type-v2='filter' values='relevant' w='16400' x='82800' y='533'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='3333' id='58' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='98400' x='800' y='3866'>
                <zone h='3333' id='52' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='800' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='3333' id='57' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='17200' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='3333' id='53' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='33600' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='3333' id='54' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='50000' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='3333' id='56' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='66400' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='3333' id='55' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='82800' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='2' h='666' id='24' is-fixed='true' type-v2='empty' w='98400' x='800' y='7199'>
                <zone-style>
                  <format attr='border-color' value='#666666' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='2' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='12' h='1333' id='23' is-fixed='true' type-v2='empty' w='98400' x='800' y='7865'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='90269' id='6' type-v2='layout-basic' w='98400' x='800' y='9198'>
                <zone h='90269' id='8' param='vert' type-v2='layout-flow' w='98400' x='800' y='9198'>
                  <zone fixed-size='400' h='26667' id='49' is-fixed='true' param='horz' type-v2='layout-flow' w='98400' x='800' y='9198'>
                    <zone h='26667' id='81' param='vert' type-v2='layout-flow' w='71400' x='800' y='9198'>
                      <zone h='1800' id='82' type-v2='text' w='71400' x='800' y='9198'>
                        <formatted-text>
                          <run bold='true' fontsize='12'>Average Rent &amp; # Of Listings</run>
                        </formatted-text>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='2466' id='80' name='Flat Map' pane-specification-id='0' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]' type-v2='color' w='71400' x='800' y='10998'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone fixed-size='692' h='22401' id='36' is-fixed='true' name='Flat Map' show-title='false' w='71400' x='800' y='13464'>
                        <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                    <zone fixed-size='12' h='26667' id='50' is-fixed='true' type-v2='empty' w='2000' x='72200' y='9198'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone fixed-size='250' h='26667' id='48' is-fixed='true' param='vert' type-v2='layout-flow' w='25000' x='74200' y='9198'>
                      <zone h='4000' id='13' param='vert' type-v2='layout-flow' w='25000' x='74200' y='9198'>
                        <zone forceUpdate='true' h='1800' id='14' type-v2='text' w='25000' x='74200' y='9198'>
                          <formatted-text>
                            <run bold='true' fontsize='12'>Average Rent:</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='2200' id='15' name='Average Rent' show-title='false' w='25000' x='74200' y='10998'>
                          <layout-cache fixed-size-h='25' fixed-size-w='120' type-h='fixed' type-w='fixed' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                      <zone h='4000' id='12' param='vert' type-v2='layout-flow' w='25000' x='74200' y='13198'>
                        <zone h='1800' id='11' type-v2='text' w='25000' x='74200' y='13198'>
                          <formatted-text>
                            <run bold='true' fontsize='12'># Properties:</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='2200' id='10' name='# Properties' show-title='false' w='25000' x='74200' y='14998'>
                          <layout-cache fixed-size-h='25' fixed-size-w='60' type-h='fixed' type-w='fixed' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                      <zone h='4000' id='16' param='vert' type-v2='layout-flow' w='25000' x='74200' y='17198'>
                        <zone forceUpdate='true' h='1800' id='17' type-v2='text' w='25000' x='74200' y='17198'>
                          <formatted-text>
                            <run bold='true' fontsize='12'>Average # Beds:</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='2200' id='18' name='Average Beds' show-title='false' w='25000' x='74200' y='18998'>
                          <layout-cache fixed-size-h='25' fixed-size-w='89' type-h='fixed' type-w='fixed' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                      <zone h='4000' id='19' param='vert' type-v2='layout-flow' w='25000' x='74200' y='21198'>
                        <zone forceUpdate='true' h='1800' id='20' type-v2='text' w='25000' x='74200' y='21198'>
                          <formatted-text>
                            <run bold='true' fontsize='12'>Average # Baths:</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='2200' id='21' name='Average Baths' show-title='false' w='25000' x='74200' y='22998'>
                          <layout-cache fixed-size-h='25' fixed-size-w='70' type-h='fixed' type-w='fixed' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                  <zone fixed-size='12' h='1333' id='31' is-fixed='true' type-v2='empty' w='98400' x='800' y='35865'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='450' h='30000' id='35' is-fixed='true' param='horz' type-v2='layout-flow' w='98400' x='800' y='37198'>
                    <zone fixed-size='550' h='30000' id='32' is-fixed='true' param='vert' type-v2='layout-flow' w='98400' x='800' y='37198'>
                      <zone forceUpdate='true' h='1800' id='37' type-v2='text' w='98400' x='800' y='37198'>
                        <formatted-text>
                          <run bold='true' fontsize='12'>Average Rent (Â£) PCM &lt;</run>
                          <run bold='true' fontsize='12'>[Parameters].[Parameter 1]</run>
                          <run bold='true' fontsize='12'>&gt;</run>
                        </formatted-text>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='3333' id='38' mode='list' param='[Parameters].[Parameter 1]' show-title='false' type-v2='paramctrl' w='98400' x='800' y='38998'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone fixed-size='2' h='666' id='39' is-fixed='true' type-v2='empty' w='98400' x='800' y='42331'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='24134' id='33' name='Rent By Borough' show-title='false' w='98400' x='800' y='42997'>
                        <layout-cache cell-count-h='1' type-h='cell' type-w='cell' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='67' id='34' name='Rent By Available Date' show-title='false' w='98400' x='800' y='67131'>
                        <layout-cache has-max-size-h='true' maxheight='1' minheight='1' minwidth='170' type-h='scalable' type-w='scalable' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone fixed-size='12' h='1333' id='47' is-fixed='true' type-v2='empty' w='98400' x='800' y='67198'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='12' h='1333' id='41' is-fixed='true' type-v2='empty' w='98400' x='800' y='68531'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='29603' id='42' name='Data Detail' w='98400' x='800' y='69864'>
                    <layout-cache fixed-size-h='4475' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2500' minheight='2500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='86' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98934' id='85' param='vert' type-v2='layout-flow' w='98400' x='800' y='533'>
                <zone fixed-size='317' forceUpdate='true' h='3333' id='30' type-v2='text' w='32500' x='800' y='533'>
                  <formatted-text>
                    <run bold='true' fontsize='16'>London Rental Flat Overview</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone alt-text='Image of Apartment Building' fixed-size='42' h='3334' id='61' is-fixed='true' is-scaled='1' param='/Users/eric/Desktop/PYTHON/Portfolio Projects/real estate/images/apartment.png' type-v2='bitmap' w='16500' x='33300' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='1800' id='82' type-v2='text' w='71400' x='800' y='9198'>
                  <formatted-text>
                    <run bold='true' fontsize='12'>Average Rent &amp; # Of Listings</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='1800' id='14' type-v2='text' w='25000' x='74200' y='9198'>
                  <formatted-text>
                    <run bold='true' fontsize='12'>Average Rent:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3334' id='51' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]' show-null-ctrls='false' show-reldate-picker='false' show-slider='false' type-v2='filter' values='relevant' w='16500' x='66300' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3333' id='52' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='800' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3333' id='57' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='17200' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3333' id='53' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='33600' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3333' id='54' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='50000' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3333' id='56' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='66400' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3333' id='55' mode='checkdropdown' name='Average Rent' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:nk]' show-apply='true' type-v2='filter' values='relevant' w='16400' x='82800' y='3867'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='25' h='2200' id='15' is-fixed='true' name='Average Rent' show-title='false' w='25000' x='74200' y='10998'>
                  <layout-cache fixed-size-h='25' fixed-size-w='120' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='1800' id='11' type-v2='text' w='25000' x='74200' y='13198'>
                  <formatted-text>
                    <run bold='true' fontsize='12'># Properties:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='22401' id='36' is-fixed='true' name='Flat Map' show-title='false' w='71400' x='800' y='13464'>
                  <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2466' id='80' name='Flat Map' pane-specification-id='0' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]' type-v2='color' w='71400' x='800' y='10998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3334' id='27' mode='checkdropdown' name='# Properties' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]' show-apply='true' type-v2='filter' values='relevant' w='16500' x='49800' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3334' id='28' name='# Properties' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]' show-null-ctrls='false' show-slider='false' type-v2='filter' values='relevant' w='16400' x='82800' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='25' h='2200' id='10' is-fixed='true' name='# Properties' show-title='false' w='25000' x='74200' y='14998'>
                  <layout-cache fixed-size-h='25' fixed-size-w='60' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='1800' id='17' type-v2='text' w='25000' x='74200' y='17198'>
                  <formatted-text>
                    <run bold='true' fontsize='12'>Average # Beds:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='25' h='2200' id='18' is-fixed='true' name='Average Beds' show-title='false' w='25000' x='74200' y='18998'>
                  <layout-cache fixed-size-h='25' fixed-size-w='89' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='1800' id='20' type-v2='text' w='25000' x='74200' y='21198'>
                  <formatted-text>
                    <run bold='true' fontsize='12'>Average # Baths:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='25' h='2200' id='21' is-fixed='true' name='Average Baths' show-title='false' w='25000' x='74200' y='22998'>
                  <layout-cache fixed-size-h='25' fixed-size-w='70' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='1800' id='37' type-v2='text' w='98400' x='800' y='37198'>
                  <formatted-text>
                    <run bold='true' fontsize='12'>Average Rent (Â£) PCM &lt;</run>
                    <run bold='true' fontsize='12'>[Parameters].[Parameter 1]</run>
                    <run bold='true' fontsize='12'>&gt;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3333' id='38' mode='list' param='[Parameters].[Parameter 1]' show-title='false' type-v2='paramctrl' w='98400' x='800' y='38998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24134' id='33' is-fixed='true' name='Rent By Borough' show-title='false' w='98400' x='800' y='42997'>
                  <layout-cache cell-count-h='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='67' id='34' is-fixed='true' name='Rent By Available Date' show-title='false' w='98400' x='800' y='67131'>
                  <layout-cache has-max-size-h='true' maxheight='1' minheight='1' minwidth='170' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29603' id='42' is-fixed='true' name='Data Detail' w='98400' x='800' y='69864'>
                  <layout-cache fixed-size-h='4475' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B9D33C1C-25C4-4B1A-97F4-F7207E5F080A}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='London Rental Flat Overview'>
      <viewpoints>
        <viewpoint name='# Properties' />
        <viewpoint name='Average Baths' />
        <viewpoint name='Average Beds' />
        <viewpoint name='Average Rent' />
        <viewpoint name='Data Detail' />
        <viewpoint name='Flat Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Rent By Available Date'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Rent By Borough'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7A761B9E-5006-4E78-A9D4-F1FDA3324CBA}' />
    </window>
    <window class='worksheet' name='# Scraped Sanity' tab-color='#6e597f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[yr:scrape_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6FF067E0-E058-4F5B-B1D3-1D434D256116}' />
    </window>
    <window class='worksheet' hidden='true' name='# Properties' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCE1320E-D9F5-4029-AFEA-7435A9875862}' />
    </window>
    <window class='worksheet' hidden='true' name='Average Baths' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{647E7764-7A08-47D4-9784-B801E4DA5298}' />
    </window>
    <window class='worksheet' hidden='true' name='Average Beds' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D6A4D944-709A-4EE0-8AF3-CD9366A41873}' />
    </window>
    <window class='worksheet' hidden='true' name='Average Rent' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:qk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDC41464-F2D0-4616-8812-9B3E00A8CDFA}' />
    </window>
    <window class='worksheet' hidden='true' name='Data Detail' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:available_from:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:bills_included:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:closest_station:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:closest_station_mins:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:deposit:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:description:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:family_friendly:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:fireplace:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:garden:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:min_tenancy_months:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:parking:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:pet_friendly:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_id:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_link:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[sum:Calculation_888546153548345344:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[sum:rent_pcm:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[yr:available_from:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{73A3DC87-29BA-438F-8277-8EFFF35EC597}' />
    </window>
    <window class='worksheet' hidden='true' name='Flat Map' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[ctd:property_id:qk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[med:num_bedrooms:qk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_719379691605893121:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:postcode:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:rent_pcm:qk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[tmn:available_from:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E264242F-CCE5-4901-8540-A5282A277032}' />
    </window>
    <window class='worksheet' hidden='true' name='Map Tooltip' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:deposit:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:furnishing:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bathrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:num_bedrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_id:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:property_link:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[sum:num_bedrooms:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53F89F4B-F901-46F0-B663-D461457A8994}' />
    </window>
    <window class='worksheet' hidden='true' name='Rent By Available Date' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_802133335129923585:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[yr:available_from:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[yr:scrape_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37947904-12FE-4351-8DCE-D1DF70ADA9FC}' />
    </window>
    <window class='worksheet' hidden='true' name='Rent By Borough' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08d00uo1ue0adw1bnxbw40m8rntt].[usr:Calculation_719379691610189826:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_802133335129923585:ok]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[none:Calculation_816770033929490432:nk]</field>
            <field>[federated.08d00uo1ue0adw1bnxbw40m8rntt].[yr:scrape_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B714B8D-1279-44D1-8D22-7E415911D9B3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='88' name='# Scraped Sanity' width='384'>
      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
      sfXfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='London Rental Flat Overview' width='384'>
      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
      hAlUVVUxatQo2rZty8GDB9E0jezsbD788ENCoRC33HJL9LTu0KFD0fXl5+dzzz33IAgCbreb
      kpISnnnmGQYMGMDkyZOZPXs27du3Jz8/H8MwePbZZxk0aFCz+bPZbJimicPhwOv1AvDMM88w
      d+5cOnTowK5du3jhhRfo378/jz/+OJFIhFAoRF1dHYqiMHPmTDZv3kxRURGGYfC3v/2NN998
      k+eee479+/djt9vZuHEj9913H7feeuvpFmPUwYMHufvuu+natSs7d+5EFEU++ugj5s9vuBNl
      48aNvPvuuzz77LONljsyf/To0chyw8/5hz/8genTp7NgwQIGDx7MqFGjuPbaaxk3bhyapjF6
      9GgefPBBQqEQ99xzD3FxcVRVVZGdnc2///1v1qxZwxNPPEFaWhqHDh1i1KhRvPrqq02uQ9M0
      nnjiCV566SUuueSSJsvYbrdzzz33RMt71KhROBwO5s+fz6JFi5g2bRoffPDBDy7DM001ZbbV
      Z+MUQ2S7iqlQPWyrz6ad63CjAFBSr7C30kGOGCDOqbO73EFQk0htIyKLOnD+BLb58+cTiUSQ
      ZZnOnTs36lawnLpVq1aRnJxMu3bteOutt7j++utZvXo1Q4YMaXYZ0zR5++23uf32289iTpt2
      Wh3Pe/bsYdq0aQwZMoS33nqL+++/n3Xr1rFgwYJoGtM0mTt3LoMGDWLfvn34/X4WLlxIQUEB
      DzzwANOmTePyyy+Ppn/11VepqqrijTfeYOrUqXi9Xl544YVG3zts2DA+/PBDoOEoszmzZ89m
      yJAhbN68mcceewy3282uXbv4+OOPueOOO3jnnXdISUlhxowZ0WVqa2v55z//ydixY4lEIuza
      tYtBgwbRrl07WrduzdSpU3E6nYwdO5YpU6YwceJEkpKSWLt27UmX2+9+9zuGDRvGuHHjjpmX
      mprK/Pnzeemll/j9738fPQq/5557ALjyyiuPafwBSktLEQSB9PT06DSn00lycjIlJSWkpaXR
      q1cvli5dSl1dHStXrkRVVQYOHMikSZOIRCK8++67PPDAA2zYsIEdO3ZE19O9e3eWLFnCb3/7
      22bXcbTmyrhnz544nU5WrVrF+vXrqa+vp7y8nPz8fFasWMGll1560mVo+WGuvfZagsEgV1xx
      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
      vRw9ehSlFGeeeSbnnnsuAI8//jj/+Z//SbvdZmJigmuuuYZvfOMbbNiwYaA89v3vf580Tbny
      yisHvzc3N8d3v/tdAIaHh3nVq16FXklU9qT5iKKISy65hLGxsZ/KfJwOd9xxB/feey8f/OAH
      f+bHWsMa1vCzw6o8gI997GP88R//MU888cTPejwviI9//ON885vf5Pbbb+ed73wn09PTq/7u
      U089xR/+4R8ue7/VavH7v//7nHnmmQDcdtttfOITnxgs+GeccQbvf//76Xa7S773+c9/ni9+
      8Yvcdddd/Pqv/zoPP/wwt912GzfeeCPHjx9neHiYBx54gF6vx4c//GE++MEP4pwjz3P+6I/+
      iL/+679e8nuHDx/mwx/+ME888QR/+qd/yic/+clVz8eXvvQlbrzxxmUC1T8LHDt2jEcfffRn
      fpw1rGENP1u8oAF4/PHHMcZw3nnnceuttwLwZ3/2Z3zoQx8C4M477+TP//zPeeqpp7jhhhvY
      u3fvYOH6yEc+wu/93u9x9dVX88gjj3DDDTfwpje9iXe96110u12eeOIJ3vKWt/DOd76T3/zN
      3+Rzn/sc1lo+9KEPcd111/Hud7+bVmu5tNyVV17Je97zHvI8J01Tjh8/zm/91m+xd+9ePvrR
      jwLwiU98gt/93d/l+uuv59prr+XQoUN88pOf5N/+7d9473vfu+T3vva1r7Fz50527NiBc479
      +/ezY8cOrrrqKrZu3cq5557L5s2b+cY3vrFsLBdccAEf/OAHEUJw5MgR/vZv/5a3v/3tvP/9
      7+etb30rf/InfwKA1pput8t9993Hf/zHf5x2oX73u9/N2NgY5XKZT33qU7zvfe8D4J577uEj
      H/nIss+/5jWv4bLLLqNUClrIt9xyC9dddx179+7l5ptvXnYtnnvuOT72sY+xd+9e3vKWt3DX
      XXcBcO2117Jv3z7uvfderr/+egBuv/12rrnmGt7znvfw5je/mX379gHBaN544428/vWv56GH
      HlrxXNawhjX898ULGoCvfvWr7N27l7179/L1r3+dLMu47LLLuP3225mamuKWW27h8ssv56/+
      6q/YtGkTH/jAB7j55ptJ05SZmRlmZ2f5xCc+wZlnnslf/MVf8NGPfpQf/ehH7N+/n09+8pNs
      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
      bw8eArakYQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
